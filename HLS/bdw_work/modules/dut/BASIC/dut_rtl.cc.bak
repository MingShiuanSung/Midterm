// Generated by stratus_hls 19.12-s100  (91710.131054)
// Sun Apr 17 21:30:58 2022
// from dut.cc
#include "dut_rtl.h"

struct dut;
dut::dut(sc_module_name name) : sc_module(name) 
    ,clk("clk")
    ,rst("rst")
    ,din_busy("din_busy")
    ,din_vld("din_vld")
    ,din_data_a("din_data_a")
    ,din_data_b("din_data_b")
    ,din_data_c("din_data_c")
    ,din_data_d("din_data_d")
    ,din_data_e("din_data_e")
    ,din_data_f("din_data_f")
    ,din_data_g("din_data_g")
    ,din_data_h("din_data_h")
    ,dout_busy("dout_busy")
    ,dout_vld("dout_vld")
    ,dout_data("dout_data")
    ,dout_m_req_m_prev_trig_req("dout_m_req_m_prev_trig_req")
    ,dut_Xor_1Ux1U_1U_1_4_out1("dut_Xor_1Ux1U_1U_1_4_out1")
    ,dout_m_unacked_req("dout_m_unacked_req")
    ,dut_Or_1Ux1U_1U_4_5_out1("dut_Or_1Ux1U_1U_4_5_out1")
    ,dut_N_Muxb_1_2_1_4_1_out1("dut_N_Muxb_1_2_1_4_1_out1")
    ,din_m_unvalidated_req("din_m_unvalidated_req")
    ,dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next("dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next")
    ,dut_gen_busy_r_1_2_gdiv("dut_gen_busy_r_1_2_gdiv")
    ,dut_gen_busy_r_1_2_gnew_req("dut_gen_busy_r_1_2_gnew_req")
    ,global_state_next("global_state_next")
    ,dut_LessThan_32Ux32U_1U_4_12_out1("dut_LessThan_32Ux32U_1U_4_12_out1")
    ,dut_Add_3Ux2S_5S_4_8_in2("dut_Add_3Ux2S_5S_4_8_in2")
    ,gs_ctrl4("gs_ctrl4")
    ,gs_ctrl3("gs_ctrl3")
    ,gs_ctrl2("gs_ctrl2")
    ,dut_LessThan_5Sx5S_1U_4_9_out1("dut_LessThan_5Sx5S_1U_4_9_out1")
    ,gs_ctrl1("gs_ctrl1")
    ,gs_ctrl0("gs_ctrl0")
    ,dut_LessThan_33Sx33S_1U_4_11_out1("dut_LessThan_33Sx33S_1U_4_11_out1")
    ,dut_Add_32Sx2S_32S_4_10_out1("dut_Add_32Sx2S_32S_4_10_out1")
    ,dut_Add_3Ux2S_5S_4_8_out1("dut_Add_3Ux2S_5S_4_8_out1")
    ,dut_N_Mux_3_2_0_4_13_out1("dut_N_Mux_3_2_0_4_13_out1")
    ,s_reg_42("s_reg_42")
    ,dut_LessThan_5Sx4S_1U_4_15_out1("dut_LessThan_5Sx4S_1U_4_15_out1")
    ,s_reg_41("s_reg_41")
    ,dut_Add_3Ux2S_5S_4_14_out1("dut_Add_3Ux2S_5S_4_14_out1")
    ,s_reg_46("s_reg_46")
    ,s_reg_40("s_reg_40")
    ,s_reg_39("s_reg_39")
    ,s_reg_38("s_reg_38")
    ,s_reg_37("s_reg_37")
    ,s_reg_36("s_reg_36")
    ,s_reg_35("s_reg_35")
    ,s_reg_34("s_reg_34")
    ,dut_gen_busy_r_1_2_out1("dut_gen_busy_r_1_2_out1")
    ,dut_And_1Ux1U_1U_1_6_out1("dut_And_1Ux1U_1U_1_6_out1")
    ,dut_Not_1U_1U_1_7_out1("dut_Not_1U_1U_1_7_out1")
    ,dout_m_req_m_trig_req("dout_m_req_m_trig_req")
    ,global_state("global_state")
    ,din_m_busy_req_0("din_m_busy_req_0")
    ,s_reg_50("s_reg_50")
    ,s_reg_49("s_reg_49")
    ,s_reg_48("s_reg_48")
    ,s_reg_47("s_reg_47")
    ,s_reg_45("s_reg_45")
    ,s_reg_43("s_reg_43")
    ,s_reg_44("s_reg_44")
    ,stall0("stall0")
    ,arr_DIN("arr_DIN")
    ,arr_CE("arr_CE")
    ,arr_RW("arr_RW")
    ,arr_in1("arr_in1")
    ,arr_out1("arr_out1")
{
  arr = new dut_RAM_8X32_1("arr");
  arr->DIN(arr_DIN);
  arr->CE(arr_CE);
  arr->RW(arr_RW);
  arr->in1(arr_in1);
  arr->out1(arr_out1);
  arr->clk(clk);

  SC_METHOD(drive_dout_data);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_m_busy_req_0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_dout_m_req_m_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( dut_gen_busy_r_1_2_out1 );
  sensitive << ( dut_And_1Ux1U_1U_1_6_out1 );

  SC_METHOD(drive_s_reg_34);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_35);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_36);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_37);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_38);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_39);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_40);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_41);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_42);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_43);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_44);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_45);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_46);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_47);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_48);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_49);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_50);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_arr_in1);
  sensitive << ( gs_ctrl0 );
  sensitive << ( s_reg_40 );
  sensitive << ( s_reg_43 );
  sensitive << ( s_reg_46 );
  sensitive << ( dut_N_Mux_3_2_0_4_13_out1 );
  sensitive << ( s_reg_42 );
  sensitive << ( s_reg_41 );

  SC_METHOD(drive_arr_DIN);
  sensitive << ( gs_ctrl1 );
  sensitive << ( din_data_a );
  sensitive << ( s_reg_40 );
  sensitive << ( s_reg_34 );
  sensitive << ( s_reg_35 );
  sensitive << ( s_reg_36 );
  sensitive << ( s_reg_37 );
  sensitive << ( s_reg_38 );
  sensitive << ( s_reg_39 );
  sensitive << ( arr_out1 );
  sensitive << ( s_reg_44 );

  SC_METHOD(drive_arr_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl2 );
  sensitive << ( dut_LessThan_5Sx5S_1U_4_9_out1 );
  sensitive << ( s_reg_41 );

  SC_METHOD(drive_arr_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl3 );

  SC_METHOD(drive_dut_Add_3Ux2S_5S_4_8_in2);
  sensitive << ( gs_ctrl4 );
  sensitive << ( s_reg_40 );

  SC_METHOD(dut_Add_3Ux2S_5S_4_8);
  sensitive << ( dut_Add_3Ux2S_5S_4_8_in2 );

  SC_METHOD(dut_LessThan_5Sx5S_1U_4_9);
  sensitive << ( dut_Add_3Ux2S_5S_4_8_out1 );

  SC_METHOD(dut_Add_32Sx2S_32S_4_10);
  sensitive << ( s_reg_43 );

  SC_METHOD(dut_LessThan_33Sx33S_1U_4_11);
  sensitive << ( dut_Add_32Sx2S_32S_4_10_out1 );

  SC_METHOD(dut_LessThan_32Ux32U_1U_4_12);
  sensitive << ( s_reg_44 );
  sensitive << ( arr_out1 );

  SC_METHOD(dut_N_Mux_3_2_0_4_13);
  sensitive << ( dut_LessThan_32Ux32U_1U_4_12_out1 );
  sensitive << ( s_reg_43 );
  sensitive << ( s_reg_42 );

  SC_METHOD(dut_Add_3Ux2S_5S_4_14);
  sensitive << ( s_reg_40 );

  SC_METHOD(dut_LessThan_5Sx4S_1U_4_15);
  sensitive << ( s_reg_40 );

  SC_METHOD(drive_global_state);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( dut_LessThan_5Sx5S_1U_4_9_out1 );
  sensitive << ( s_reg_46 );
  sensitive << ( s_reg_41 );

  SC_METHOD(drive_gs_ctrl0);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl1);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl2);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl3);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl4);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(drive_din_busy);
  sensitive << ( dut_gen_busy_r_1_2_out1 );

  SC_METHOD(dut_gen_busy_r_1_2_p8);
  sensitive << ( dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next );
  sensitive << ( dut_gen_busy_r_1_2_gdiv );
  sensitive << ( dut_gen_busy_r_1_2_gnew_req );

  SC_METHOD(dut_gen_busy_r_1_2_p7);
  sensitive << ( dut_gen_busy_r_1_2_gdiv );

  SC_METHOD(dut_gen_busy_r_1_2_p6);
  sensitive << ( dut_gen_busy_r_1_2_gnew_req );
  sensitive << ( din_vld );

  SC_METHOD(dut_gen_busy_r_1_2_p5);
  sensitive << ( din_vld );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_m_busy_req_0 );

  SC_METHOD(drive_din_m_unvalidated_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_N_Muxb_1_2_1_4_1);
  sensitive << ( din_m_busy_req_0 );
  sensitive << ( din_m_unvalidated_req );
  sensitive << ( din_vld );

  SC_METHOD(drive_dout_vld);
  sensitive << ( dut_Or_1Ux1U_1U_4_5_out1 );

  SC_METHOD(dut_Or_1Ux1U_1U_4_5);
  sensitive << ( dut_Xor_1Ux1U_1U_1_4_out1 );
  sensitive << ( dout_m_unacked_req );

  SC_METHOD(drive_dout_m_unacked_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_And_1Ux1U_1U_1_6);
  sensitive << ( dout_vld );
  sensitive << ( dout_busy );

  SC_METHOD(dut_Xor_1Ux1U_1U_1_4);
  sensitive << ( dout_m_req_m_prev_trig_req );
  sensitive << ( dout_m_req_m_trig_req );

  SC_METHOD(drive_dout_m_req_m_prev_trig_req);
  sensitive << clk.pos();
  dont_initialize();

  SC_METHOD(dut_Not_1U_1U_1_7);
  sensitive << ( dout_m_req_m_trig_req );

}
// resource: regr_en_256
void dut::drive_dout_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    dout_data = ( (sc_biguint<256> )(sc_bv<256>)((sc_bv<32>)(arr_out1.read()), 
                (sc_bv<224>)((sc_bv<32>)(s_reg_50.read()), 
                (sc_bv<192>)((sc_bv<32>)(s_reg_49.read()), 
                (sc_bv<160>)((sc_bv<32>)(s_reg_48.read()), 
                (sc_bv<128>)((sc_bv<32>)(s_reg_47.read()), 
                (sc_bv<96>)((sc_bv<32>)(s_reg_45.read()), 
                (sc_bv<64>)((sc_bv<32>)(s_reg_43.read()), 
                (sc_bv<32>)((sc_biguint<32> )s_reg_44.read())))))))) );
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void dut::drive_din_m_busy_req_0(){
  if ( (rst.read() == 0ULL) ) {
    din_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state.read()) ) {
      case 0ULL: case 26ULL: 
        din_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        din_m_busy_req_0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void dut::drive_dout_m_req_m_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state.read()) ) {
      case 25ULL: 
        dout_m_req_m_trig_req = (sc_uint<1> ) (dut_Not_1U_1U_1_7_out1.read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void dut::drive_stall0(){
  switch( (sc_uint<5>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = (sc_uint<1> )dut_gen_busy_r_1_2_out1.read();
    break;
  case 26ULL: 
    stall0 = dut_And_1Ux1U_1U_1_6_out1.read();
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_34(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_34 = din_data_c.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_35(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_35 = din_data_d.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_36(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_36 = din_data_e.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_37(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_37 = din_data_f.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_38(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_38 = din_data_g.read();
      break;
    }
    break;
  }
}
// resource: regr_en_8
void dut::drive_s_reg_39(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_39 = din_data_h.read();
      break;
    }
    break;
  }
}
// resource: mux_8bx5i1c
// resource: regr_en_8
void dut::drive_s_reg_40(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 1ULL: 
      s_reg_40 = din_data_b.read();
      break;
    case 9ULL: 
      /* state13 */
      s_reg_40 = 0ULL;
      break;
    case 13ULL: 
      if ( s_reg_46.read() ) {
        s_reg_40 = (sc_uint<8> ) ((sc_int<5> )s_reg_40.read());
      } 
      break;
    case 15ULL: 
      s_reg_40 = (sc_uint<8> ) (dut_Add_3Ux2S_5S_4_14_out1.read());
      break;
    case 17ULL: 
      s_reg_40 = (sc_uint<8> ) ((sc_int<5> )s_reg_40.read());
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_41(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    s_reg_41 = dut_LessThan_5Sx4S_1U_4_15_out1.read();
    break;
  }
}
// resource: mux_3bx3i1c
// resource: regr_en_3
void dut::drive_s_reg_42(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 9ULL: 
      s_reg_42 = 0ULL;
      break;
    case 13ULL: 
      s_reg_42 = (sc_uint<3> ) (dut_N_Mux_3_2_0_4_13_out1.read());
      break;
    case 17ULL: 
      s_reg_42 = (sc_uint<3> )s_reg_40.read();
      break;
    }
    break;
  }
}
// resource: mux_32bx3i0c
// resource: regr_en_32
void dut::drive_s_reg_43(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 9ULL: case 17ULL: 
      s_reg_43 = (sc_uint<32> ) (dut_Add_3Ux2S_5S_4_8_out1.read());
      break;
    case 13ULL: 
      s_reg_43 = s_reg_45.read();
      break;
    case 19ULL: 
      s_reg_43 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void dut::drive_s_reg_44(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 12ULL: case 14ULL: case 18ULL: 
      s_reg_44 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_32
void dut::drive_s_reg_45(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 12ULL: 
      s_reg_45 = (sc_uint<32> ) (dut_Add_32Sx2S_32S_4_10_out1.read());
      break;
    case 20ULL: 
      s_reg_45 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_1
void dut::drive_s_reg_46(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    s_reg_46 = dut_LessThan_33Sx33S_1U_4_11_out1.read();
    break;
  }
}
// resource: regr_en_32
void dut::drive_s_reg_47(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 21ULL: 
      s_reg_47 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void dut::drive_s_reg_48(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 22ULL: 
      s_reg_48 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void dut::drive_s_reg_49(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    switch( (sc_uint<5>)(global_state.read()) ) {
    case 23ULL: 
      s_reg_49 = arr_out1.read();
      break;
    }
    break;
  }
}
// resource: regr_en_32
void dut::drive_s_reg_50(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  case 0ULL: 
    s_reg_50 = arr_out1.read();
    break;
  }
}
// resource: mux_3bx12i8c
void dut::drive_arr_in1(){
  switch( (sc_uint<4>)(gs_ctrl0.read()) ) {
  default:
    arr_in1 = 0ULL;
    break;
  case 1ULL: 
    arr_in1 = 1ULL;
    break;
  case 2ULL: 
    arr_in1 = 2ULL;
    break;
  case 3ULL: 
    arr_in1 = 3ULL;
    break;
  case 4ULL: 
    arr_in1 = 4ULL;
    break;
  case 5ULL: 
    arr_in1 = 5ULL;
    break;
  case 6ULL: 
    arr_in1 = 6ULL;
    break;
  case 7ULL: 
    arr_in1 = 7ULL;
    break;
  case 8ULL: 
    arr_in1 = (sc_uint<3> )s_reg_40.read();
    break;
  case 9ULL: 
    arr_in1 = (sc_uint<3> )s_reg_43.read();
    break;
  case 10ULL: 
    if ( s_reg_46.read() ) {
      /* state29 */
      arr_in1 = (sc_uint<3> ) (dut_N_Mux_3_2_0_4_13_out1.read());
    } else {
      arr_in1 = (sc_uint<3> )s_reg_40.read();
    }
    break;
  case 11ULL: 
    arr_in1 = s_reg_42.read();
    break;
  case 12ULL: 
    if ( s_reg_41.read() ) {
      /* state27 */
      arr_in1 = (sc_uint<3> )s_reg_40.read();
    } else {
      /* state28 */
      arr_in1 = 0ULL;
    }
    break;
  }
}
// resource: mux_32bx10i0c
void dut::drive_arr_DIN(){
  switch( (sc_uint<4>)(gs_ctrl1.read()) ) {
  default:
    arr_DIN = (sc_uint<32> ) (din_data_a.read());
    break;
  case 1ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_40.read());
    break;
  case 2ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_34.read());
    break;
  case 3ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_35.read());
    break;
  case 4ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_36.read());
    break;
  case 5ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_37.read());
    break;
  case 6ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_38.read());
    break;
  case 7ULL: 
    arr_DIN = (sc_uint<32> ) (s_reg_39.read());
    break;
  case 8ULL: 
    arr_DIN = arr_out1.read();
    break;
  case 9ULL: 
    arr_DIN = s_reg_44.read();
    break;
  }
}
// resource: mux_1bx2i2c
void dut::drive_arr_CE(){
  if ( stall0.read() ) {
    arr_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl2.read()) ) {
    default:
      arr_CE = 0ULL;
      break;
    case 1ULL: 
      arr_CE = 1ULL;
      break;
    case 2ULL: 
      if ( dut_LessThan_5Sx5S_1U_4_9_out1.read() ) {
        arr_CE = 1ULL;
      } else {
        arr_CE = 0ULL;
      }
      break;
    case 3ULL: 
      if ( s_reg_41.read() ) {
        if ( dut_LessThan_5Sx5S_1U_4_9_out1.read() ) {
          arr_CE = 1ULL;
        } else {
          arr_CE = 0ULL;
        }
      } else {
        arr_CE = 1ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void dut::drive_arr_RW(){
  if ( stall0.read() ) {
    arr_RW = 0ULL;
  } else {
    if ( gs_ctrl3.read() ) {
      arr_RW = 1ULL;
    } else {
      arr_RW = 0ULL;
    }
  }
}
// resource: mux_3bx2i1c
void dut::drive_dut_Add_3Ux2S_5S_4_8_in2(){
  if ( gs_ctrl4.read() ) {
    dut_Add_3Ux2S_5S_4_8_in2 = (sc_uint<3> )s_reg_40.read();
  } else {
    dut_Add_3Ux2S_5S_4_8_in2 = 0ULL;
  }
}
// resource: dut_Add_3Ux2S_5S_4  instance: dut_Add_3Ux2S_5S_4_8
void dut::dut_Add_3Ux2S_5S_4_8(){
  dut_Add_3Ux2S_5S_4_8_out1 = (/*cliff*/sc_int<32>)(dut_Add_3Ux2S_5S_4_8_in2
                              .read() + 1LL);
}
// resource: dut_LessThan_5Sx5S_1U_4  instance: dut_LessThan_5Sx5S_1U_4_9
void dut::dut_LessThan_5Sx5S_1U_4_9(){
  dut_LessThan_5Sx5S_1U_4_9_out1 = (/*imp*/sc_uint<1>)(dut_Add_3Ux2S_5S_4_8_out1
                                   .read() < (sc_int<5> )8LL);
}
// resource: dut_Add_32Sx2S_32S_4  instance: dut_Add_32Sx2S_32S_4_10
void dut::dut_Add_32Sx2S_32S_4_10(){
  dut_Add_32Sx2S_32S_4_10_out1 = (/*cliff*/sc_int<32>)((sc_int<32> )s_reg_43
                                 .read() + 1LL);
}
// resource: dut_LessThan_33Sx33S_1U_4  instance: dut_LessThan_33Sx33S_1U_4_11
void dut::dut_LessThan_33Sx33S_1U_4_11(){
  dut_LessThan_33Sx33S_1U_4_11_out1 = (/*imp*/sc_uint<1>)((sc_int<33> )
                                      dut_Add_32Sx2S_32S_4_10_out1.read() < (
                                      sc_int<33> )8LL);
}
// resource: dut_LessThan_32Ux32U_1U_4  instance: dut_LessThan_32Ux32U_1U_4_12
void dut::dut_LessThan_32Ux32U_1U_4_12(){
  dut_LessThan_32Ux32U_1U_4_12_out1 = (/*imp*/sc_uint<1>)(arr_out1.read() < 
                                      s_reg_44.read());
}
// resource: dut_N_Mux_3_2_0_4
void dut::dut_N_Mux_3_2_0_4_13(){
  if ( dut_LessThan_32Ux32U_1U_4_12_out1.read() ) {
    dut_N_Mux_3_2_0_4_13_out1 = (sc_uint<3> )s_reg_43.read();
  } else {
    dut_N_Mux_3_2_0_4_13_out1 = (sc_uint<3> ) (s_reg_42.read());
  }
}
// resource: dut_Add_3Ux2S_5S_4  instance: dut_Add_3Ux2S_5S_4_14
void dut::dut_Add_3Ux2S_5S_4_14(){
  dut_Add_3Ux2S_5S_4_14_out1 = (/*cliff*/sc_int<32>)((sc_uint<3> )s_reg_40
                               .read() + 1LL);
}
// resource: dut_LessThan_5Sx4S_1U_4  instance: dut_LessThan_5Sx4S_1U_4_15
void dut::dut_LessThan_5Sx4S_1U_4_15(){
  dut_LessThan_5Sx4S_1U_4_15_out1 = (/*imp*/sc_uint<1>)((sc_int<5> )s_reg_40
                                    .read() < (sc_int<4> )7LL);
}
// resource: regr_en_sc_5
void dut::drive_global_state(){
  if ( (rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_5bx5i4c
void dut::drive_global_state_next(){
  switch( (sc_uint<5>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 26ULL: 
    global_state_next = 1ULL;
    break;
  case 9ULL: 
    if ( dut_LessThan_5Sx5S_1U_4_9_out1.read() ) {
      global_state_next = 12ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 11ULL: 
    global_state_next = 14ULL;
    break;
  case 13ULL: 
    if ( s_reg_46.read() ) {
      global_state_next = 12ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 17ULL: 
    if ( s_reg_41.read() ) {
      if ( dut_LessThan_5Sx5S_1U_4_9_out1.read() ) {
        global_state_next = 12ULL;
      } else {
        global_state_next = 10ULL;
      }
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  }
}
// resource: mux_4bx13i13c
// resource: regr_en_sc_4
void dut::drive_gs_ctrl0(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl0 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state_next.read()) ) {
      default:
        gs_ctrl0 = 0ULL;
        break;
      case 2ULL: case 18ULL: 
        gs_ctrl0 = 1ULL;
        break;
      case 3ULL: case 19ULL: 
        gs_ctrl0 = 2ULL;
        break;
      case 4ULL: case 20ULL: 
        gs_ctrl0 = 3ULL;
        break;
      case 5ULL: case 21ULL: 
        gs_ctrl0 = 4ULL;
        break;
      case 6ULL: case 22ULL: 
        gs_ctrl0 = 5ULL;
        break;
      case 7ULL: case 23ULL: 
        gs_ctrl0 = 6ULL;
        break;
      case 8ULL: case 24ULL: 
        gs_ctrl0 = 7ULL;
        break;
      case 11ULL: case 15ULL: 
        gs_ctrl0 = 8ULL;
        break;
      case 12ULL: 
        gs_ctrl0 = 9ULL;
        break;
      case 13ULL: 
        gs_ctrl0 = 10ULL;
        break;
      case 14ULL: case 16ULL: 
        gs_ctrl0 = 11ULL;
        break;
      case 17ULL: 
        gs_ctrl0 = 12ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_4bx10i10c
// resource: regr_en_sc_4
void dut::drive_gs_ctrl1(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl1 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state_next.read()) ) {
      default:
        gs_ctrl1 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl1 = 1ULL;
        break;
      case 3ULL: 
        gs_ctrl1 = 2ULL;
        break;
      case 4ULL: 
        gs_ctrl1 = 3ULL;
        break;
      case 5ULL: 
        gs_ctrl1 = 4ULL;
        break;
      case 6ULL: 
        gs_ctrl1 = 5ULL;
        break;
      case 7ULL: 
        gs_ctrl1 = 6ULL;
        break;
      case 8ULL: 
        gs_ctrl1 = 7ULL;
        break;
      case 15ULL: 
        gs_ctrl1 = 8ULL;
        break;
      case 16ULL: 
        gs_ctrl1 = 9ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void dut::drive_gs_ctrl2(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl2 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state_next.read()) ) {
      default:
        gs_ctrl2 = 0ULL;
        break;
      case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 6ULL: case 
      7ULL: case 8ULL: case 11ULL: case 12ULL: case 13ULL: case 14ULL: case 
      15ULL: case 16ULL: case 18ULL: case 19ULL: case 20ULL: case 21ULL: case 
      22ULL: case 23ULL: case 24ULL: 
        gs_ctrl2 = 1ULL;
        break;
      case 9ULL: 
        gs_ctrl2 = 2ULL;
        break;
      case 17ULL: 
        gs_ctrl2 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void dut::drive_gs_ctrl3(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl3 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state_next.read()) ) {
      default:
        gs_ctrl3 = 0ULL;
        break;
      case 1ULL: case 2ULL: case 3ULL: case 4ULL: case 5ULL: case 6ULL: case 
      7ULL: case 8ULL: case 15ULL: case 16ULL: 
        gs_ctrl3 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void dut::drive_gs_ctrl4(){
  if ( (rst.read() == 0ULL) ) {
    gs_ctrl4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    case 0ULL: 
      switch( (sc_uint<5>)(global_state_next.read()) ) {
      default:
        gs_ctrl4 = 0ULL;
        break;
      case 17ULL: 
        gs_ctrl4 = 1ULL;
        break;
      }
      break;
    }
  }
}
void dut::drive_din_busy(){
  din_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) dut_gen_busy_r_1_2_out1.read()
             .range(2,2)));
}
// resource: dut_gen_busy_r_1  instance: dut_gen_busy_r_1_2
void dut::dut_gen_busy_r_1_2_p8(){
  dut_gen_busy_r_1_2_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)(
                            (sc_bv<1>)(dut_gen_busy_r_1_2_gnew_req.read()), 
                            (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)((sc_bv<1>)(
                            dut_gen_busy_r_1_2_gdiv.read()), 
                            (sc_bv<1>)(dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next
                            .read())) ))) ));
}
// resource: dut_gen_busy_r_1  instance: dut_gen_busy_r_1_2
void dut::dut_gen_busy_r_1_2_p7(){
  dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next = ~(sc_uint<1>)dut_gen_busy_r_1_2_gdiv
                                                           .read();
}
// resource: dut_gen_busy_r_1  instance: dut_gen_busy_r_1_2
void dut::dut_gen_busy_r_1_2_p6(){
  dut_gen_busy_r_1_2_gdiv = (sc_uint<1> ) (din_vld.read() & !
                            dut_gen_busy_r_1_2_gnew_req.read());
}
// resource: dut_gen_busy_r_1  instance: dut_gen_busy_r_1_2
void dut::dut_gen_busy_r_1_2_p5(){
  dut_gen_busy_r_1_2_gnew_req = (sc_uint<1> ) (din_m_busy_req_0.read() & ( 
                                din_m_unvalidated_req.read() | (sc_uint<1> )
                                din_vld.read() ));
}
// resource: regr_ss_1
void dut::drive_din_m_unvalidated_req(){
  if ( (rst.read() == 0ULL) ) {
    din_m_unvalidated_req = 1ULL;
  } else {
    din_m_unvalidated_req = (sc_uint<1> ) (dut_N_Muxb_1_2_1_4_1_out1.read());
  }
}
// resource: dut_N_Muxb_1_2_1_4
void dut::dut_N_Muxb_1_2_1_4_1(){
  if ( din_m_busy_req_0.read() ) {
    dut_N_Muxb_1_2_1_4_1_out1 = (sc_uint<1> ) (din_m_unvalidated_req.read());
  } else {
    dut_N_Muxb_1_2_1_4_1_out1 = (sc_uint<1> ) (din_vld.read());
  }
}
void dut::drive_dout_vld(){
  dout_vld = (sc_uint<1> ) (dut_Or_1Ux1U_1U_4_5_out1.read());
}
// resource: dut_Or_1Ux1U_1U_4  instance: dut_Or_1Ux1U_1U_4_5
void dut::dut_Or_1Ux1U_1U_4_5(){
  dut_Or_1Ux1U_1U_4_5_out1 = (sc_uint<1> ) (dout_m_unacked_req.read() | (
                             sc_uint<1>)dut_Xor_1Ux1U_1U_1_4_out1.read());
}
// resource: regr_sc_1
void dut::drive_dout_m_unacked_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_unacked_req = 0ULL;
  } else {
    dout_m_unacked_req = (sc_uint<1> ) (dut_And_1Ux1U_1U_1_6_out1.read());
  }
}
// resource: dut_And_1Ux1U_1U_1  instance: dut_And_1Ux1U_1U_1_6
void dut::dut_And_1Ux1U_1U_1_6(){
  dut_And_1Ux1U_1U_1_6_out1 = (sc_uint<1> ) (dout_busy.read() & dout_vld.read())
  ;
}
// resource: dut_Xor_1Ux1U_1U_1  instance: dut_Xor_1Ux1U_1U_1_4
void dut::dut_Xor_1Ux1U_1U_1_4(){
  dut_Xor_1Ux1U_1U_1_4_out1 = (sc_uint<1> ) (dout_m_req_m_trig_req.read() ^ 
                              dout_m_req_m_prev_trig_req.read());
}
// resource: regr_sc_1
void dut::drive_dout_m_req_m_prev_trig_req(){
  if ( (rst.read() == 0ULL) ) {
    dout_m_req_m_prev_trig_req = 0ULL;
  } else {
    dout_m_req_m_prev_trig_req = dout_m_req_m_trig_req.read();
  }
}
// resource: dut_Not_1U_1U_1  instance: dut_Not_1U_1U_1_7
void dut::dut_Not_1U_1U_1_7(){
  dut_Not_1U_1U_1_7_out1 = !dout_m_req_m_trig_req.read();
}
