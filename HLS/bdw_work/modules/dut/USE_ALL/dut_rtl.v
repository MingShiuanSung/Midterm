// Generated by stratus_hls 19.12-s100  (91710.131054)
// Mon Apr 18 08:28:31 2022
// from dut.cc

`timescale 1ps / 1ps

      
module dut(clk, rst, din_busy, din_vld, din_data_a, din_data_b, din_data_c, din_data_d, din_data_e, din_data_f, din_data_g, din_data_h, dout_busy, dout_vld, dout_data);

      input clk;
      input rst;
      input din_vld;
      input [7:0] din_data_a;
      input [7:0] din_data_b;
      input [7:0] din_data_c;
      input [7:0] din_data_d;
      input [7:0] din_data_e;
      input [7:0] din_data_f;
      input [7:0] din_data_g;
      input [7:0] din_data_h;
      input dout_busy;
      output din_busy;
      output dout_vld;
      output [255:0] dout_data;
      reg dout_m_req_m_prev_trig_req;
      reg dout_m_unacked_req;
      wire dut_Xor_1Ux1U_1U_1_4_out1;
      wire dut_Or_1Ux1U_1U_4_5_out1;
      reg dut_N_Muxb_1_2_16_4_1_out1;
      reg din_m_unvalidated_req;
      wire dut_gen_busy_r_1_2_gnew_req;
      wire dut_gen_busy_r_1_2_gdiv;
      wire dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next;
      reg[4:0] global_state_next;
      wire dut_OrReduction_3U_1U_4_148_out1;
      wire dut_Eqi1u3_4_147_out1;
      wire dut_Eqi2u3_4_146_out1;
      wire dut_Eqi3u3_4_145_out1;
      wire dut_Eqi4u3_4_144_out1;
      wire dut_Eqi5u3_4_143_out1;
      wire dut_Eqi7u3_4_142_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_139_in3;
      wire dut_LessThan_8Ux8U_1U_4_138_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_137_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_137_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_136_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_136_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_136_in9;
      reg gs_ctrl144;
      wire dut_OrReduction_3U_1U_4_127_out1;
      wire dut_Eqi1u3_4_126_out1;
      wire dut_Eqi2u3_4_125_out1;
      wire dut_Eqi3u3_4_124_out1;
      wire dut_Eqi4u3_4_123_out1;
      wire dut_Eqi6u3_4_122_out1;
      wire dut_Eqi7u3_4_121_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_118_in3;
      wire dut_LessThan_8Ux8U_1U_4_117_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_116_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_116_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_115_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_115_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_115_in9;
      reg gs_ctrl124;
      wire dut_OrReduction_3U_1U_4_106_out1;
      wire dut_Eqi1u3_4_105_out1;
      wire dut_Eqi2u3_4_104_out1;
      wire dut_Eqi3u3_4_103_out1;
      wire dut_Eqi5u3_4_102_out1;
      wire dut_Eqi6u3_4_101_out1;
      wire dut_Eqi7u3_4_100_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_97_in3;
      wire dut_LessThan_8Ux8U_1U_4_96_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_95_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_95_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_94_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_94_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_94_in9;
      reg gs_ctrl104;
      wire dut_OrReduction_3U_1U_4_85_out1;
      wire dut_Eqi1u3_4_84_out1;
      wire dut_Eqi2u3_4_83_out1;
      wire dut_Eqi4u3_4_82_out1;
      wire dut_Eqi5u3_4_81_out1;
      wire dut_Eqi6u3_4_80_out1;
      wire dut_Eqi7u3_4_79_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_76_in3;
      wire dut_LessThan_8Ux8U_1U_4_75_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_74_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_74_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_73_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_73_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_73_in9;
      reg gs_ctrl84;
      wire dut_OrReduction_3U_1U_4_64_out1;
      wire dut_Eqi1u3_4_63_out1;
      wire dut_Eqi3u3_4_62_out1;
      wire dut_Eqi4u3_4_61_out1;
      wire dut_Eqi5u3_4_60_out1;
      wire dut_Eqi6u3_4_59_out1;
      wire dut_Eqi7u3_4_58_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_55_in3;
      wire dut_LessThan_8Ux8U_1U_4_54_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_53_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_53_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_52_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_52_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_52_in9;
      reg gs_ctrl64;
      wire dut_OrReduction_3U_1U_4_43_out1;
      wire dut_Eqi2u3_4_42_out1;
      wire dut_Eqi3u3_4_41_out1;
      wire dut_Eqi4u3_4_40_out1;
      wire dut_Eqi5u3_4_39_out1;
      wire dut_Eqi6u3_4_38_out1;
      wire dut_Eqi7u3_4_37_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_34_in3;
      wire dut_LessThan_8Ux8U_1U_4_33_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_32_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_32_ctrl1;
      reg[1:0] gs_ctrl61;
      reg[7:0] dut_N_Mux_8_8_21_4_31_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_31_ctrl1;
      reg gs_ctrl52;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_31_in9;
      reg gs_ctrl44;
      reg[7:0] dut_N_Mux_8_8_21_4_22_out1;
      wire dut_Eqi1u3_4_21_out1;
      wire dut_Eqi2u3_4_20_out1;
      wire dut_Eqi3u3_4_19_out1;
      wire dut_Eqi4u3_4_18_out1;
      wire dut_Eqi5u3_4_17_out1;
      wire dut_Eqi6u3_4_16_out1;
      wire dut_Eqi7u3_4_15_out1;
      wire dut_OrReduction_3U_1U_4_14_out1;
      /*signed*/reg[2:0] dut_N_Mux_3_2_22_4_13_in3;
      reg[2:0] dut_Add2i1u3_4_11_in1;
      reg[1:0] gs_ctrl18;
      wire dut_LessThan_8Ux8U_1U_4_10_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_9_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_9_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_8_out1;
      reg[2:0] dut_N_Mux_8_8_21_4_8_ctrl1;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in2;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in3;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in4;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in5;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in6;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in7;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in8;
      reg[7:0] dut_N_Mux_8_8_21_4_8_in9;
      reg gs_ctrl0;
      /*signed*/reg[2:0] s_reg_152_slice;
      reg[2:0] dut_N_Mux_3_2_22_4_13_out1;
      reg[2:0] s_reg_151;
      reg[7:0] dut_N_Mux_8_2_23_4_135_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_114_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_93_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_72_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_51_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_30_out1;
      reg[7:0] s_reg_150;
      reg[7:0] dut_N_Mux_8_2_23_4_134_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_113_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_92_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_71_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_50_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_29_out1;
      reg[7:0] s_reg_149;
      reg[7:0] dut_N_Mux_8_2_23_4_133_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_112_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_91_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_70_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_49_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_28_out1;
      reg[7:0] s_reg_148;
      reg[7:0] dut_N_Mux_8_2_23_4_132_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_111_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_90_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_69_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_48_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_27_out1;
      reg[7:0] s_reg_147;
      reg[7:0] dut_N_Mux_8_2_23_4_131_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_110_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_89_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_68_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_47_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_26_out1;
      reg[7:0] s_reg_146;
      reg[7:0] dut_N_Mux_8_8_21_4_130_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_109_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_88_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_67_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_46_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_25_out1;
      reg[7:0] s_reg_145;
      reg[7:0] dut_N_Mux_8_2_23_4_129_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_108_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_87_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_66_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_45_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_24_out1;
      reg[7:0] s_reg_144;
      reg[7:0] dut_N_Mux_8_2_23_4_128_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_107_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_86_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_65_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_44_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_23_out1;
      reg[7:0] s_reg_143;
      /*signed*/wire[4:0] dut_Add2i1u3_4_11_out1;
      /*signed*/reg[2:0] s_reg_142_slice;
      reg[2:0] dut_N_Mux_3_2_22_4_139_out1;
      reg[2:0] dut_N_Mux_3_2_22_4_118_out1;
      reg[2:0] dut_N_Mux_3_2_22_4_97_out1;
      reg[2:0] dut_N_Mux_3_2_22_4_76_out1;
      reg[2:0] dut_N_Mux_3_2_22_4_55_out1;
      reg[2:0] dut_N_Mux_3_2_22_4_34_out1;
      reg[2:0] s_reg_141;
      wire[2:0] dut_gen_busy_r_1_2_out1;
      wire dut_And_1Ux1U_1U_1_6_out1;
      wire dut_Not_1U_1U_1_7_out1;
      wire dut_Lti8s5_4_12_out1;
      reg dout_m_req_m_trig_req;
      reg[4:0] global_state;
      reg din_m_busy_req_0;
      reg[7:0] dut_N_Mux_8_2_23_4_149_out1;
      reg[7:0] dut_N_Mux_8_8_21_4_150_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_151_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_152_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_153_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_154_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_155_out1;
      reg[7:0] dut_N_Mux_8_2_23_4_156_out1;
      reg[63:0] dout_data_slice;
      reg stall0;

         // rtl_process:dut/drive_dout_data_slice
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_data_slice
         // at: cynw_p2p.h:5278:13
         always @(posedge clk)
          begin :drive_dout_data_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP283
                  // at: cynw_p2p.h:5278:13
                  // Call Stack: 
                  // in function nb_put_work called from cynw_p2p.h:5063:7
                  // in function put called from dut.cc:85:8
                  dout_data_slice <= {dut_N_Mux_8_2_23_4_149_out1, {dut_N_Mux_8_8_21_4_150_out1, {dut_N_Mux_8_2_23_4_151_out1, {dut_N_Mux_8_2_23_4_152_out1, {dut_N_Mux_8_2_23_4_153_out1, {dut_N_Mux_8_2_23_4_154_out1, {dut_N_Mux_8_2_23_4_155_out1, dut_N_Mux_8_2_23_4_156_out1}}}}}}};
               end
               
            endcase

         end

         // rtl_process:dut/drive_din_m_busy_req_0
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_din_m_busy_req_0
         // at: cynw_p2p.h:1806:17
         // at: cynw_p2p.h:1761:12
         // at: cynw_p2p.h:1515:2
         // at: cynw_p2p.h:1595:7
         // at: cynw_p2p.h:1620:7
         always @(posedge clk)
          begin :drive_din_m_busy_req_0
            if (rst == 1'b0) begin
               // op:thread1/OP62
               // at: cynw_p2p.h:1515:2
               // Call Stack: 
               // in function reset called from dut.cc:33:7
               din_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd00, 5'd16:                         begin
                           // op:thread1/OP65
                           // at: cynw_p2p.h:1595:7
                           // Call Stack: 
                           // in function get_start called from cynw_p2p.h:1455:7
                           // in function get called from dut.cc:41:23
                           din_m_busy_req_0 <= 1'd0;
                        end
                        
                        5'd01:                         begin
                           // op:thread1/OP68
                           // at: cynw_p2p.h:1620:7
                           // Call Stack: 
                           // in function get_end called from cynw_p2p.h:1478:7
                           // in function get called from dut.cc:41:23
                           din_m_busy_req_0 <= 1'd1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_dout_m_req_m_trig_req
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_dout_m_req_m_trig_req
         // at: cynw_comm_util.h:1345:27
         // at: cynw_comm_util.h:1331:52
         // at: cynw_comm_util.h:1367:26
         // at: cynw_comm_util.h:1293:7
         // at: cynw_comm_util.h:1286:2
         always @(posedge clk)
          begin :drive_dout_m_req_m_trig_req
            if (rst == 1'b0) begin
               // op:thread1/OP64
               // at: cynw_comm_util.h:1293:7
               // Call Stack: 
               // in function reset called from cynw_p2p.h:5087:13
               // in function reset called from dut.cc:34:8
               dout_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        5'd14:                         begin
                           if (dut_Lti8s5_4_12_out1) begin
                           end
                           else begin
                              // op:thread1/OP285
                              // at: cynw_comm_util.h:1286:2
                              // Call Stack: 
                              // in function trig called from cynw_p2p.h:5279:8
                              // in function nb_put_work called from cynw_p2p.h:5063:7
                              // in function put called from dut.cc:85:8
                              dout_m_req_m_trig_req <= dut_Not_1U_1U_1_7_out1;
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_stall0
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_stall0
         // at: cynw_p2p.h:1532:33
         // at: cynw_p2p.h:1849:47
         // at: cynw_p2p.h:1464:9
         // at: cynw_p2p.h:5071:2
         always @(dut_gen_busy_r_1_2_out1[0] or dut_And_1Ux1U_1U_1_6_out1 or global_state)
          begin :drive_stall0
            case (global_state) 

               5'd01:                begin
                  // op:thread1/OP67
                  // at: cynw_p2p.h:1464:9
                  // Call Stack: 
                  // in function get called from dut.cc:41:23
                  stall0 = dut_gen_busy_r_1_2_out1[0];
               end
               
               5'd16:                begin
                  // op:thread1/OP287
                  // at: cynw_p2p.h:5071:2
                  // Call Stack: 
                  // in function put called from dut.cc:85:8
                  stall0 = dut_And_1Ux1U_1U_1_6_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_141
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_141
         // at: dut.cc:60:4
         // at: dut.cc:65:5
         always @(posedge clk)
          begin :drive_s_reg_141
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP108
                           // at: dut.cc:60:4
                           // Call Stack: 
                           // in function thread1 called from dut.cc:60:4
                           s_reg_141 <= 3'd1;
                        end
                        else begin
                           // op:thread1/OP117
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_34_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP117
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_34_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP146
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_55_out1;
                        end
                     end
                     
                     5'd05:                      begin
                        // op:thread1/OP117
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_34_out1;
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP175
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_76_out1;
                        end
                     end
                     
                     5'd07:                      begin
                        // op:thread1/OP146
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_55_out1;
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP204
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_97_out1;
                        end
                     end
                     
                     5'd09:                      begin
                        // op:thread1/OP175
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_76_out1;
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP233
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_118_out1;
                        end
                     end
                     
                     5'd11:                      begin
                        // op:thread1/OP204
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_97_out1;
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP262
                           // at: dut.cc:65:5
                           // Call Stack: 
                           // in function thread1 called from dut.cc:65:5
                           s_reg_141 <= dut_N_Mux_3_2_22_4_139_out1;
                        end
                     end
                     
                     5'd13:                      begin
                        // op:thread1/OP233
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_118_out1;
                     end
                     
                     5'd15:                      begin
                        // op:thread1/OP262
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_141 <= dut_N_Mux_3_2_22_4_139_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_142_slice
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_s_reg_142_slice
         // at: dut.cc:61:15
         // at: dut.cc:61:4
         // at: dut.cc:61:32
         always @(posedge clk)
          begin :drive_s_reg_142_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        // op:thread1/OP111
                        // at: dut.cc:61:4
                        // Call Stack: 
                        // in function thread1 called from dut.cc:61:4
                        s_reg_142_slice <= 3'd2;
                     end
                     
                     5'd04:                      begin
                        // op:thread1/OP118
                        // at: dut.cc:61:32
                        // Call Stack: 
                        // in function thread1 called from dut.cc:61:32
                        s_reg_142_slice <= dut_Add2i1u3_4_11_out1[2:0];
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_143
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_143
         // at: input_t.h:77:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_143
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP69
                           // at: input_t.h:77:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_143 <= din_data_a;
                        end
                        else begin
                           // op:thread1/OP92
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_23_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP92
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_23_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP123
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_44_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP152
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_65_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP181
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_86_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP210
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_107_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP239
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_143 <= dut_N_Mux_8_2_23_4_128_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_144
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_144
         // at: input_t.h:78:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_144
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP70
                           // at: input_t.h:78:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_144 <= din_data_b;
                        end
                        else begin
                           // op:thread1/OP94
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_24_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP94
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_24_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP125
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_45_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP154
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_66_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP183
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_87_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP212
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_108_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP241
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_144 <= dut_N_Mux_8_2_23_4_129_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_145
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_145
         // at: input_t.h:79:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_145
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP71
                           // at: input_t.h:79:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_145 <= din_data_c;
                        end
                        else begin
                           // op:thread1/OP96
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_25_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP96
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_25_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP127
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_46_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP156
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_67_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP185
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_88_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP214
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_2_23_4_109_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP242
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_145 <= dut_N_Mux_8_8_21_4_130_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_146
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_146
         // at: input_t.h:80:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_146
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP72
                           // at: input_t.h:80:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_146 <= din_data_d;
                        end
                        else begin
                           // op:thread1/OP98
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_26_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP98
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_26_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP129
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_47_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP158
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_68_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP187
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_89_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP215
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_8_21_4_110_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP244
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_146 <= dut_N_Mux_8_2_23_4_131_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_147
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_147
         // at: input_t.h:81:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_147
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP73
                           // at: input_t.h:81:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_147 <= din_data_e;
                        end
                        else begin
                           // op:thread1/OP100
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_27_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP100
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_27_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP131
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_48_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP160
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_69_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP188
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_8_21_4_90_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP217
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_111_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP246
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_147 <= dut_N_Mux_8_2_23_4_132_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_148
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_148
         // at: input_t.h:82:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_148
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP74
                           // at: input_t.h:82:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_148 <= din_data_f;
                        end
                        else begin
                           // op:thread1/OP102
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_28_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP102
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_28_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP133
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_49_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP161
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_8_21_4_70_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP190
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_91_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP219
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_112_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP248
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_148 <= dut_N_Mux_8_2_23_4_133_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_149
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_149
         // at: input_t.h:83:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_149
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP75
                           // at: input_t.h:83:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_149 <= din_data_g;
                        end
                        else begin
                           // op:thread1/OP104
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_29_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP104
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_29_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP134
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_8_21_4_50_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP163
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_71_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP192
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_92_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP221
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_113_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP250
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_149 <= dut_N_Mux_8_2_23_4_134_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_150
         // Sharing or Control mux
         // Sharing/Controlling 7 operation(s) on drive_s_reg_150
         // at: input_t.h:84:16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_150
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP76
                           // at: input_t.h:84:16
                           // Call Stack: 
                           // in function copy called from input_t.h:43:9
                           // in function input_t called from cynw_p2p.h:1721:2
                           // in function use_data called from cynw_p2p.h:1558:8
                           // in function nb_get called from cynw_p2p.h:1481:7
                           // in function get called from dut.cc:41:23
                           s_reg_150 <= din_data_h;
                        end
                        else begin
                           // op:thread1/OP107
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_30_out1;
                        end
                     end
                     
                     5'd03:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP107
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_30_out1;
                        end
                     end
                     
                     5'd04:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP136
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_51_out1;
                        end
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP165
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_72_out1;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP194
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_93_out1;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP223
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_114_out1;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                        end
                        else begin
                           // op:thread1/OP252
                           // at: dut.cc:72:7
                           // Call Stack: 
                           // in function thread1 called from dut.cc:72:7
                           s_reg_150 <= dut_N_Mux_8_2_23_4_135_out1;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_151
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_151
         // at: dut.cc:65:5
         always @(posedge clk)
          begin :drive_s_reg_151
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01, 5'd03:                      begin
                        // op:thread1/OP86
                        // at: dut.cc:65:5
                        // Call Stack: 
                        // in function thread1 called from dut.cc:65:5
                        s_reg_151 <= dut_N_Mux_3_2_22_4_13_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_152_slice
         // Sharing or Control mux
         // Sharing/Controlling 11 operation(s) on drive_s_reg_152_slice
         // at: dut.cc:61:4
         // at: dut.cc:61:32
         always @(posedge clk)
          begin :drive_s_reg_152_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     5'd01, 5'd03, 5'd14:                      begin
                        // op:thread1/OP87
                        // at: dut.cc:61:32
                        // Call Stack: 
                        // in function thread1 called from dut.cc:61:32
                        s_reg_152_slice <= dut_Add2i1u3_4_11_out1[2:0];
                     end
                     
                     5'd04:                      begin
                        // op:thread1/OP140
                        // at: dut.cc:61:4
                        // Call Stack: 
                        // in function thread1 called from dut.cc:61:4
                        s_reg_152_slice <= 3'd3;
                     end
                     
                     5'd06:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP147
                           // at: dut.cc:61:32
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:32
                           s_reg_152_slice <= dut_Add2i1u3_4_11_out1[2:0];
                        end
                        else begin
                           // op:thread1/OP169
                           // at: dut.cc:61:4
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:4
                           s_reg_152_slice <= 3'd4;
                        end
                     end
                     
                     5'd08:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP176
                           // at: dut.cc:61:32
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:32
                           s_reg_152_slice <= dut_Add2i1u3_4_11_out1[2:0];
                        end
                        else begin
                           // op:thread1/OP198
                           // at: dut.cc:61:4
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:4
                           s_reg_152_slice <= 3'd5;
                        end
                     end
                     
                     5'd10:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP205
                           // at: dut.cc:61:32
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:32
                           s_reg_152_slice <= dut_Add2i1u3_4_11_out1[2:0];
                        end
                        else begin
                           // op:thread1/OP227
                           // at: dut.cc:61:4
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:4
                           s_reg_152_slice <= 3'd6;
                        end
                     end
                     
                     5'd12:                      begin
                        if (dut_Lti8s5_4_12_out1) begin
                           // op:thread1/OP234
                           // at: dut.cc:61:32
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:32
                           s_reg_152_slice <= dut_Add2i1u3_4_11_out1[2:0];
                        end
                        else begin
                           // op:thread1/OP256
                           // at: dut.cc:61:4
                           // Call Stack: 
                           // in function thread1 called from dut.cc:61:4
                           s_reg_152_slice <= 3'd7;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in9
         // at: input_t.h:84:16
         always @(din_data_h or s_reg_150 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in9
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in9 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in9 = din_data_h;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in8
         // at: input_t.h:83:16
         always @(din_data_g or s_reg_149 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in8
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in8 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in8 = din_data_g;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in7
         // at: input_t.h:82:16
         always @(din_data_f or s_reg_148 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in7
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in7 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in7 = din_data_f;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in6
         // at: input_t.h:81:16
         always @(din_data_e or s_reg_147 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in6
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in6 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in6 = din_data_e;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in5
         // at: input_t.h:80:16
         always @(din_data_d or s_reg_146 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in5
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in5 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in5 = din_data_d;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in4
         // at: input_t.h:79:16
         always @(din_data_c or s_reg_145 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in4
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in4 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in4 = din_data_c;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in3
         // at: input_t.h:78:16
         always @(din_data_b or s_reg_144 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in3
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in3 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in3 = din_data_b;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_in2
         // at: input_t.h:77:16
         always @(din_data_a or s_reg_143 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_in2
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in2 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_in2 = din_data_a;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_8_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_8_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_151 or gs_ctrl0)
          begin :drive_dut_N_Mux_8_8_21_4_8_ctrl1
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_ctrl1 = s_reg_151;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_8_ctrl1 = 3'd0;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_8_in9 or dut_N_Mux_8_8_21_4_8_in8 or dut_N_Mux_8_8_21_4_8_in7 or dut_N_Mux_8_8_21_4_8_in6 or dut_N_Mux_8_8_21_4_8_in5 or dut_N_Mux_8_8_21_4_8_in4 or dut_N_Mux_8_8_21_4_8_in3 or dut_N_Mux_8_8_21_4_8_in2 or dut_N_Mux_8_8_21_4_8_ctrl1)
          begin :dut_N_Mux_8_8_21_4_8
            case (dut_N_Mux_8_8_21_4_8_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_8_out1 = dut_N_Mux_8_8_21_4_8_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_9_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_9_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl0 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_9_ctrl1
            if (gs_ctrl0) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_9_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_9_ctrl1 = 3'd1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_8_in9 or dut_N_Mux_8_8_21_4_8_in8 or dut_N_Mux_8_8_21_4_8_in7 or dut_N_Mux_8_8_21_4_8_in6 or dut_N_Mux_8_8_21_4_8_in5 or dut_N_Mux_8_8_21_4_8_in4 or dut_N_Mux_8_8_21_4_8_in3 or dut_N_Mux_8_8_21_4_8_in2 or dut_N_Mux_8_8_21_4_9_ctrl1)
          begin :dut_N_Mux_8_8_21_4_9
            case (dut_N_Mux_8_8_21_4_9_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_9_out1 = dut_N_Mux_8_8_21_4_8_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_10
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_10_out1 = dut_N_Mux_8_8_21_4_9_out1 < dut_N_Mux_8_8_21_4_8_out1;

         // rtl_process:dut/drive_dut_Add2i1u3_4_11_in1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_Add2i1u3_4_11_in1
         // at: dut.cc:61:31
         always @(gs_ctrl18 or s_reg_142_slice or s_reg_152_slice)
          begin :drive_dut_Add2i1u3_4_11_in1
            case (gs_ctrl18) 

               2'd1:                begin
                  // op:thread1/OP87
                  // at: dut.cc:61:32
                  // Call Stack: 
                  // in function thread1 called from dut.cc:61:32
                  dut_Add2i1u3_4_11_in1 = s_reg_152_slice;
               end
               
               2'd2:                begin
                  // op:thread1/OP118
                  // at: dut.cc:61:32
                  // Call Stack: 
                  // in function thread1 called from dut.cc:61:32
                  dut_Add2i1u3_4_11_in1 = s_reg_142_slice;
               end
               
               default:                begin
                  // op:thread1/OP87
                  // at: dut.cc:61:32
                  // Call Stack: 
                  // in function thread1 called from dut.cc:61:32
                  dut_Add2i1u3_4_11_in1 = 3'd1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_Add2i1u3_4_11
         // Resource=dut_Add2i1u3_4, Function=add : Inputs=3 Outputs=5S
         // Implements 7 operation(s)
         // at: dut.cc:61:32
         assign dut_Add2i1u3_4_11_out1 = {2'b00, dut_Add2i1u3_4_11_in1} + 5'd01;

         // rtl_instance:dut/dut_Lti8s5_4_12
         // Resource=dut_Lti8s5_4, Function=lt : Inputs=5S Outputs=1
         // Implements 7 operation(s)
         // at: dut.cc:61:26
         assign dut_Lti8s5_4_12_out1 = dut_Add2i1u3_4_11_out1[4] ^ dut_Add2i1u3_4_11_out1 < 5'd08;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_13_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_13_in3
         // at: dut.cc:65:5
         always @(s_reg_151 or gs_ctrl0)
          begin :drive_dut_N_Mux_3_2_22_4_13_in3
            if (gs_ctrl0) begin
               // op:thread1/OP86
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_13_in3 = s_reg_151;
            end
            else begin
               // op:thread1/OP86
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_13_in3 = 3'd0;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_9_ctrl1 or dut_LessThan_8Ux8U_1U_4_10_out1 or dut_N_Mux_3_2_22_4_13_in3)
          begin :dut_N_Mux_3_2_22_4_13
            if (dut_LessThan_8Ux8U_1U_4_10_out1) begin
               dut_N_Mux_3_2_22_4_13_out1 = dut_N_Mux_8_8_21_4_9_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_13_out1 = dut_N_Mux_3_2_22_4_13_in3;
            end
         end

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_14
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_14_out1 = (|dut_N_Mux_3_2_22_4_13_out1);

         // rtl_instance:dut/dut_Eqi7u3_4_15
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_15_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_16
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_16_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd6;

         // rtl_instance:dut/dut_Eqi5u3_4_17
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_17_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd5;

         // rtl_instance:dut/dut_Eqi4u3_4_18
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_18_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd4;

         // rtl_instance:dut/dut_Eqi3u3_4_19
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_19_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd3;

         // rtl_instance:dut/dut_Eqi2u3_4_20
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_20_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd2;

         // rtl_instance:dut/dut_Eqi1u3_4_21
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_21_out1 = dut_N_Mux_3_2_22_4_13_out1 == 3'd1;

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_8_in9 or dut_N_Mux_8_8_21_4_8_in8 or dut_N_Mux_8_8_21_4_8_in7 or dut_N_Mux_8_8_21_4_8_in6 or dut_N_Mux_8_8_21_4_8_in5 or dut_N_Mux_8_8_21_4_8_in4 or dut_N_Mux_8_8_21_4_8_in3 or dut_N_Mux_8_8_21_4_8_in2 or dut_N_Mux_3_2_22_4_13_out1)
          begin :dut_N_Mux_8_8_21_4_22
            case (dut_N_Mux_3_2_22_4_13_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_22_out1 = dut_N_Mux_8_8_21_4_8_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in9 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi7u3_4_15_out1)
          begin :dut_N_Mux_8_2_23_4_23
            if (dut_Eqi7u3_4_15_out1) begin
               dut_N_Mux_8_2_23_4_23_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_23_out1 = dut_N_Mux_8_8_21_4_8_in9;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in8 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi6u3_4_16_out1)
          begin :dut_N_Mux_8_2_23_4_24
            if (dut_Eqi6u3_4_16_out1) begin
               dut_N_Mux_8_2_23_4_24_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_24_out1 = dut_N_Mux_8_8_21_4_8_in8;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in7 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi5u3_4_17_out1)
          begin :dut_N_Mux_8_2_23_4_25
            if (dut_Eqi5u3_4_17_out1) begin
               dut_N_Mux_8_2_23_4_25_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_25_out1 = dut_N_Mux_8_8_21_4_8_in7;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in6 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi4u3_4_18_out1)
          begin :dut_N_Mux_8_2_23_4_26
            if (dut_Eqi4u3_4_18_out1) begin
               dut_N_Mux_8_2_23_4_26_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_26_out1 = dut_N_Mux_8_8_21_4_8_in6;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in5 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi3u3_4_19_out1)
          begin :dut_N_Mux_8_2_23_4_27
            if (dut_Eqi3u3_4_19_out1) begin
               dut_N_Mux_8_2_23_4_27_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_27_out1 = dut_N_Mux_8_8_21_4_8_in5;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in4 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi2u3_4_20_out1)
          begin :dut_N_Mux_8_2_23_4_28
            if (dut_Eqi2u3_4_20_out1) begin
               dut_N_Mux_8_2_23_4_28_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_28_out1 = dut_N_Mux_8_8_21_4_8_in4;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in3 or dut_N_Mux_8_8_21_4_8_in2 or dut_Eqi1u3_4_21_out1)
          begin :dut_N_Mux_8_2_23_4_29
            if (dut_Eqi1u3_4_21_out1) begin
               dut_N_Mux_8_2_23_4_29_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
            else begin
               dut_N_Mux_8_2_23_4_29_out1 = dut_N_Mux_8_8_21_4_8_in3;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(dut_N_Mux_8_8_21_4_8_in2 or dut_OrReduction_3U_1U_4_14_out1 or dut_N_Mux_8_8_21_4_22_out1)
          begin :dut_N_Mux_8_2_23_4_30
            if (dut_OrReduction_3U_1U_4_14_out1) begin
               dut_N_Mux_8_2_23_4_30_out1 = dut_N_Mux_8_8_21_4_22_out1;
            end
            else begin
               dut_N_Mux_8_2_23_4_30_out1 = dut_N_Mux_8_8_21_4_8_in2;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_23_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in9
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in9 = dut_N_Mux_8_2_23_4_23_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_24_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in8
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in8 = dut_N_Mux_8_2_23_4_24_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_2_23_4_25_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in7
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in7 = dut_N_Mux_8_2_23_4_25_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_2_23_4_26_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in6
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in6 = dut_N_Mux_8_2_23_4_26_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_2_23_4_27_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in5
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in5 = dut_N_Mux_8_2_23_4_27_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_2_23_4_28_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in4
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in4 = dut_N_Mux_8_2_23_4_28_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_2_23_4_29_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in3
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in3 = dut_N_Mux_8_2_23_4_29_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_30_out1 or gs_ctrl44)
          begin :drive_dut_N_Mux_8_8_21_4_31_in2
            if (gs_ctrl44) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_in2 = dut_N_Mux_8_2_23_4_30_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_31_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_31_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl52)
          begin :drive_dut_N_Mux_8_8_21_4_31_ctrl1
            if (gs_ctrl52) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_31_ctrl1 = 3'd1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_31_in9 or dut_N_Mux_8_8_21_4_31_in8 or dut_N_Mux_8_8_21_4_31_in7 or dut_N_Mux_8_8_21_4_31_in6 or dut_N_Mux_8_8_21_4_31_in5 or dut_N_Mux_8_8_21_4_31_in4 or dut_N_Mux_8_8_21_4_31_in3 or dut_N_Mux_8_8_21_4_31_in2 or dut_N_Mux_8_8_21_4_31_ctrl1)
          begin :dut_N_Mux_8_8_21_4_31
            case (dut_N_Mux_8_8_21_4_31_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_31_out1 = dut_N_Mux_8_8_21_4_31_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_32_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_32_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl61 or s_reg_142_slice)
          begin :drive_dut_N_Mux_8_8_21_4_32_ctrl1
            case (gs_ctrl61) 

               2'd1, 2'd2:                begin
                  // op:thread1/OP57
                  dut_N_Mux_8_8_21_4_32_ctrl1 = s_reg_142_slice;
               end
               
               default:                begin
                  // op:thread1/OP57
                  dut_N_Mux_8_8_21_4_32_ctrl1 = 3'd2;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_31_in9 or dut_N_Mux_8_8_21_4_31_in8 or dut_N_Mux_8_8_21_4_31_in7 or dut_N_Mux_8_8_21_4_31_in6 or dut_N_Mux_8_8_21_4_31_in5 or dut_N_Mux_8_8_21_4_31_in4 or dut_N_Mux_8_8_21_4_31_in3 or dut_N_Mux_8_8_21_4_31_in2 or dut_N_Mux_8_8_21_4_32_ctrl1)
          begin :dut_N_Mux_8_8_21_4_32
            case (dut_N_Mux_8_8_21_4_32_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_32_out1 = dut_N_Mux_8_8_21_4_31_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_33
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_33_out1 = dut_N_Mux_8_8_21_4_32_out1 < dut_N_Mux_8_8_21_4_31_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_34_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_34_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl52)
          begin :drive_dut_N_Mux_3_2_22_4_34_in3
            if (gs_ctrl52) begin
               // op:thread1/OP117
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_34_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP117
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_34_in3 = 3'd1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_32_ctrl1 or dut_LessThan_8Ux8U_1U_4_33_out1 or dut_N_Mux_3_2_22_4_34_in3)
          begin :dut_N_Mux_3_2_22_4_34
            if (dut_LessThan_8Ux8U_1U_4_33_out1) begin
               dut_N_Mux_3_2_22_4_34_out1 = dut_N_Mux_8_8_21_4_32_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_34_out1 = dut_N_Mux_3_2_22_4_34_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_37
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_37_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_38
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_38_out1 = s_reg_141 == 3'd6;

         // rtl_instance:dut/dut_Eqi5u3_4_39
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_39_out1 = s_reg_141 == 3'd5;

         // rtl_instance:dut/dut_Eqi4u3_4_40
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_40_out1 = s_reg_141 == 3'd4;

         // rtl_instance:dut/dut_Eqi3u3_4_41
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_41_out1 = s_reg_141 == 3'd3;

         // rtl_instance:dut/dut_Eqi2u3_4_42
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_42_out1 = s_reg_141 == 3'd2;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_43
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_43_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_149 or dut_Eqi7u3_4_37_out1)
          begin :dut_N_Mux_8_2_23_4_44
            if (dut_Eqi7u3_4_37_out1) begin
               dut_N_Mux_8_2_23_4_44_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_44_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_149 or dut_Eqi6u3_4_38_out1)
          begin :dut_N_Mux_8_2_23_4_45
            if (dut_Eqi6u3_4_38_out1) begin
               dut_N_Mux_8_2_23_4_45_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_45_out1 = s_reg_144;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_149 or dut_Eqi5u3_4_39_out1)
          begin :dut_N_Mux_8_2_23_4_46
            if (dut_Eqi5u3_4_39_out1) begin
               dut_N_Mux_8_2_23_4_46_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_46_out1 = s_reg_145;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_149 or dut_Eqi4u3_4_40_out1)
          begin :dut_N_Mux_8_2_23_4_47
            if (dut_Eqi4u3_4_40_out1) begin
               dut_N_Mux_8_2_23_4_47_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_47_out1 = s_reg_146;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_147 or s_reg_149 or dut_Eqi3u3_4_41_out1)
          begin :dut_N_Mux_8_2_23_4_48
            if (dut_Eqi3u3_4_41_out1) begin
               dut_N_Mux_8_2_23_4_48_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_48_out1 = s_reg_147;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_148 or s_reg_149 or dut_Eqi2u3_4_42_out1)
          begin :dut_N_Mux_8_2_23_4_49
            if (dut_Eqi2u3_4_42_out1) begin
               dut_N_Mux_8_2_23_4_49_out1 = s_reg_149;
            end
            else begin
               dut_N_Mux_8_2_23_4_49_out1 = s_reg_148;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_50
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_50_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_149 or s_reg_150 or dut_OrReduction_3U_1U_4_43_out1)
          begin :dut_N_Mux_8_2_23_4_51
            if (dut_OrReduction_3U_1U_4_43_out1) begin
               dut_N_Mux_8_2_23_4_51_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_51_out1 = s_reg_149;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_44_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in9
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in9 = dut_N_Mux_8_2_23_4_44_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_45_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in8
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in8 = dut_N_Mux_8_2_23_4_45_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_2_23_4_46_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in7
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in7 = dut_N_Mux_8_2_23_4_46_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_2_23_4_47_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in6
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in6 = dut_N_Mux_8_2_23_4_47_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_2_23_4_48_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in5
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in5 = dut_N_Mux_8_2_23_4_48_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_2_23_4_49_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in4
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in4 = dut_N_Mux_8_2_23_4_49_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_8_21_4_50_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in3
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in3 = dut_N_Mux_8_8_21_4_50_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_51_out1 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_in2
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_in2 = dut_N_Mux_8_2_23_4_51_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_52_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_52_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl64)
          begin :drive_dut_N_Mux_8_8_21_4_52_ctrl1
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_52_ctrl1 = 3'd2;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_52_in9 or dut_N_Mux_8_8_21_4_52_in8 or dut_N_Mux_8_8_21_4_52_in7 or dut_N_Mux_8_8_21_4_52_in6 or dut_N_Mux_8_8_21_4_52_in5 or dut_N_Mux_8_8_21_4_52_in4 or dut_N_Mux_8_8_21_4_52_in3 or dut_N_Mux_8_8_21_4_52_in2 or dut_N_Mux_8_8_21_4_52_ctrl1)
          begin :dut_N_Mux_8_8_21_4_52
            case (dut_N_Mux_8_8_21_4_52_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_52_out1 = dut_N_Mux_8_8_21_4_52_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_53_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_53_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl64 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_53_ctrl1
            if (gs_ctrl64) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_53_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_53_ctrl1 = 3'd3;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_52_in9 or dut_N_Mux_8_8_21_4_52_in8 or dut_N_Mux_8_8_21_4_52_in7 or dut_N_Mux_8_8_21_4_52_in6 or dut_N_Mux_8_8_21_4_52_in5 or dut_N_Mux_8_8_21_4_52_in4 or dut_N_Mux_8_8_21_4_52_in3 or dut_N_Mux_8_8_21_4_52_in2 or dut_N_Mux_8_8_21_4_53_ctrl1)
          begin :dut_N_Mux_8_8_21_4_53
            case (dut_N_Mux_8_8_21_4_53_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_53_out1 = dut_N_Mux_8_8_21_4_52_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_54
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_54_out1 = dut_N_Mux_8_8_21_4_53_out1 < dut_N_Mux_8_8_21_4_52_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_55_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_55_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl64)
          begin :drive_dut_N_Mux_3_2_22_4_55_in3
            if (gs_ctrl64) begin
               // op:thread1/OP146
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_55_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP146
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_55_in3 = 3'd2;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_53_ctrl1 or dut_LessThan_8Ux8U_1U_4_54_out1 or dut_N_Mux_3_2_22_4_55_in3)
          begin :dut_N_Mux_3_2_22_4_55
            if (dut_LessThan_8Ux8U_1U_4_54_out1) begin
               dut_N_Mux_3_2_22_4_55_out1 = dut_N_Mux_8_8_21_4_53_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_55_out1 = dut_N_Mux_3_2_22_4_55_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_58
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_58_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_59
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_59_out1 = s_reg_141 == 3'd6;

         // rtl_instance:dut/dut_Eqi5u3_4_60
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_60_out1 = s_reg_141 == 3'd5;

         // rtl_instance:dut/dut_Eqi4u3_4_61
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_61_out1 = s_reg_141 == 3'd4;

         // rtl_instance:dut/dut_Eqi3u3_4_62
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_62_out1 = s_reg_141 == 3'd3;

         // rtl_instance:dut/dut_Eqi1u3_4_63
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_63_out1 = s_reg_141 == 3'd1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_64
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_64_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_148 or dut_Eqi7u3_4_58_out1)
          begin :dut_N_Mux_8_2_23_4_65
            if (dut_Eqi7u3_4_58_out1) begin
               dut_N_Mux_8_2_23_4_65_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_65_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_148 or dut_Eqi6u3_4_59_out1)
          begin :dut_N_Mux_8_2_23_4_66
            if (dut_Eqi6u3_4_59_out1) begin
               dut_N_Mux_8_2_23_4_66_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_66_out1 = s_reg_144;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_148 or dut_Eqi5u3_4_60_out1)
          begin :dut_N_Mux_8_2_23_4_67
            if (dut_Eqi5u3_4_60_out1) begin
               dut_N_Mux_8_2_23_4_67_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_67_out1 = s_reg_145;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_148 or dut_Eqi4u3_4_61_out1)
          begin :dut_N_Mux_8_2_23_4_68
            if (dut_Eqi4u3_4_61_out1) begin
               dut_N_Mux_8_2_23_4_68_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_68_out1 = s_reg_146;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_147 or s_reg_148 or dut_Eqi3u3_4_62_out1)
          begin :dut_N_Mux_8_2_23_4_69
            if (dut_Eqi3u3_4_62_out1) begin
               dut_N_Mux_8_2_23_4_69_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_69_out1 = s_reg_147;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_70
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_70_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_148 or s_reg_149 or dut_Eqi1u3_4_63_out1)
          begin :dut_N_Mux_8_2_23_4_71
            if (dut_Eqi1u3_4_63_out1) begin
               dut_N_Mux_8_2_23_4_71_out1 = s_reg_148;
            end
            else begin
               dut_N_Mux_8_2_23_4_71_out1 = s_reg_149;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_148 or s_reg_150 or dut_OrReduction_3U_1U_4_64_out1)
          begin :dut_N_Mux_8_2_23_4_72
            if (dut_OrReduction_3U_1U_4_64_out1) begin
               dut_N_Mux_8_2_23_4_72_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_72_out1 = s_reg_148;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_65_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in9
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in9 = dut_N_Mux_8_2_23_4_65_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_66_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in8
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in8 = dut_N_Mux_8_2_23_4_66_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_2_23_4_67_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in7
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in7 = dut_N_Mux_8_2_23_4_67_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_2_23_4_68_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in6
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in6 = dut_N_Mux_8_2_23_4_68_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_2_23_4_69_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in5
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in5 = dut_N_Mux_8_2_23_4_69_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_8_21_4_70_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in4
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in4 = dut_N_Mux_8_8_21_4_70_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_2_23_4_71_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in3
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in3 = dut_N_Mux_8_2_23_4_71_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_72_out1 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_in2
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_in2 = dut_N_Mux_8_2_23_4_72_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_73_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_73_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl84)
          begin :drive_dut_N_Mux_8_8_21_4_73_ctrl1
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_73_ctrl1 = 3'd3;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_73_in9 or dut_N_Mux_8_8_21_4_73_in8 or dut_N_Mux_8_8_21_4_73_in7 or dut_N_Mux_8_8_21_4_73_in6 or dut_N_Mux_8_8_21_4_73_in5 or dut_N_Mux_8_8_21_4_73_in4 or dut_N_Mux_8_8_21_4_73_in3 or dut_N_Mux_8_8_21_4_73_in2 or dut_N_Mux_8_8_21_4_73_ctrl1)
          begin :dut_N_Mux_8_8_21_4_73
            case (dut_N_Mux_8_8_21_4_73_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_73_out1 = dut_N_Mux_8_8_21_4_73_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_74_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_74_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl84 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_74_ctrl1
            if (gs_ctrl84) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_74_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_74_ctrl1 = 3'd4;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_73_in9 or dut_N_Mux_8_8_21_4_73_in8 or dut_N_Mux_8_8_21_4_73_in7 or dut_N_Mux_8_8_21_4_73_in6 or dut_N_Mux_8_8_21_4_73_in5 or dut_N_Mux_8_8_21_4_73_in4 or dut_N_Mux_8_8_21_4_73_in3 or dut_N_Mux_8_8_21_4_73_in2 or dut_N_Mux_8_8_21_4_74_ctrl1)
          begin :dut_N_Mux_8_8_21_4_74
            case (dut_N_Mux_8_8_21_4_74_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_74_out1 = dut_N_Mux_8_8_21_4_73_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_75
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_75_out1 = dut_N_Mux_8_8_21_4_74_out1 < dut_N_Mux_8_8_21_4_73_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_76_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_76_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl84)
          begin :drive_dut_N_Mux_3_2_22_4_76_in3
            if (gs_ctrl84) begin
               // op:thread1/OP175
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_76_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP175
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_76_in3 = 3'd3;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_74_ctrl1 or dut_LessThan_8Ux8U_1U_4_75_out1 or dut_N_Mux_3_2_22_4_76_in3)
          begin :dut_N_Mux_3_2_22_4_76
            if (dut_LessThan_8Ux8U_1U_4_75_out1) begin
               dut_N_Mux_3_2_22_4_76_out1 = dut_N_Mux_8_8_21_4_74_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_76_out1 = dut_N_Mux_3_2_22_4_76_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_79
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_79_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_80
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_80_out1 = s_reg_141 == 3'd6;

         // rtl_instance:dut/dut_Eqi5u3_4_81
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_81_out1 = s_reg_141 == 3'd5;

         // rtl_instance:dut/dut_Eqi4u3_4_82
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_82_out1 = s_reg_141 == 3'd4;

         // rtl_instance:dut/dut_Eqi2u3_4_83
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_83_out1 = s_reg_141 == 3'd2;

         // rtl_instance:dut/dut_Eqi1u3_4_84
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_84_out1 = s_reg_141 == 3'd1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_85
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_85_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_147 or dut_Eqi7u3_4_79_out1)
          begin :dut_N_Mux_8_2_23_4_86
            if (dut_Eqi7u3_4_79_out1) begin
               dut_N_Mux_8_2_23_4_86_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_86_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_147 or dut_Eqi6u3_4_80_out1)
          begin :dut_N_Mux_8_2_23_4_87
            if (dut_Eqi6u3_4_80_out1) begin
               dut_N_Mux_8_2_23_4_87_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_87_out1 = s_reg_144;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_147 or dut_Eqi5u3_4_81_out1)
          begin :dut_N_Mux_8_2_23_4_88
            if (dut_Eqi5u3_4_81_out1) begin
               dut_N_Mux_8_2_23_4_88_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_88_out1 = s_reg_145;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_147 or dut_Eqi4u3_4_82_out1)
          begin :dut_N_Mux_8_2_23_4_89
            if (dut_Eqi4u3_4_82_out1) begin
               dut_N_Mux_8_2_23_4_89_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_89_out1 = s_reg_146;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_90
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_90_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_147 or s_reg_148 or dut_Eqi2u3_4_83_out1)
          begin :dut_N_Mux_8_2_23_4_91
            if (dut_Eqi2u3_4_83_out1) begin
               dut_N_Mux_8_2_23_4_91_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_91_out1 = s_reg_148;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_147 or s_reg_149 or dut_Eqi1u3_4_84_out1)
          begin :dut_N_Mux_8_2_23_4_92
            if (dut_Eqi1u3_4_84_out1) begin
               dut_N_Mux_8_2_23_4_92_out1 = s_reg_147;
            end
            else begin
               dut_N_Mux_8_2_23_4_92_out1 = s_reg_149;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_147 or s_reg_150 or dut_OrReduction_3U_1U_4_85_out1)
          begin :dut_N_Mux_8_2_23_4_93
            if (dut_OrReduction_3U_1U_4_85_out1) begin
               dut_N_Mux_8_2_23_4_93_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_93_out1 = s_reg_147;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_86_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in9
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in9 = dut_N_Mux_8_2_23_4_86_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_87_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in8
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in8 = dut_N_Mux_8_2_23_4_87_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_2_23_4_88_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in7
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in7 = dut_N_Mux_8_2_23_4_88_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_2_23_4_89_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in6
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in6 = dut_N_Mux_8_2_23_4_89_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_8_21_4_90_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in5
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in5 = dut_N_Mux_8_8_21_4_90_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_2_23_4_91_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in4
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in4 = dut_N_Mux_8_2_23_4_91_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_2_23_4_92_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in3
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in3 = dut_N_Mux_8_2_23_4_92_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_93_out1 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_in2
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_in2 = dut_N_Mux_8_2_23_4_93_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_94_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_94_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl104)
          begin :drive_dut_N_Mux_8_8_21_4_94_ctrl1
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_94_ctrl1 = 3'd4;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_94_in9 or dut_N_Mux_8_8_21_4_94_in8 or dut_N_Mux_8_8_21_4_94_in7 or dut_N_Mux_8_8_21_4_94_in6 or dut_N_Mux_8_8_21_4_94_in5 or dut_N_Mux_8_8_21_4_94_in4 or dut_N_Mux_8_8_21_4_94_in3 or dut_N_Mux_8_8_21_4_94_in2 or dut_N_Mux_8_8_21_4_94_ctrl1)
          begin :dut_N_Mux_8_8_21_4_94
            case (dut_N_Mux_8_8_21_4_94_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_94_out1 = dut_N_Mux_8_8_21_4_94_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_95_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_95_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl104 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_95_ctrl1
            if (gs_ctrl104) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_95_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_95_ctrl1 = 3'd5;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_94_in9 or dut_N_Mux_8_8_21_4_94_in8 or dut_N_Mux_8_8_21_4_94_in7 or dut_N_Mux_8_8_21_4_94_in6 or dut_N_Mux_8_8_21_4_94_in5 or dut_N_Mux_8_8_21_4_94_in4 or dut_N_Mux_8_8_21_4_94_in3 or dut_N_Mux_8_8_21_4_94_in2 or dut_N_Mux_8_8_21_4_95_ctrl1)
          begin :dut_N_Mux_8_8_21_4_95
            case (dut_N_Mux_8_8_21_4_95_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_95_out1 = dut_N_Mux_8_8_21_4_94_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_96
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_96_out1 = dut_N_Mux_8_8_21_4_95_out1 < dut_N_Mux_8_8_21_4_94_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_97_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_97_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl104)
          begin :drive_dut_N_Mux_3_2_22_4_97_in3
            if (gs_ctrl104) begin
               // op:thread1/OP204
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_97_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP204
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_97_in3 = 3'd4;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_95_ctrl1 or dut_LessThan_8Ux8U_1U_4_96_out1 or dut_N_Mux_3_2_22_4_97_in3)
          begin :dut_N_Mux_3_2_22_4_97
            if (dut_LessThan_8Ux8U_1U_4_96_out1) begin
               dut_N_Mux_3_2_22_4_97_out1 = dut_N_Mux_8_8_21_4_95_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_97_out1 = dut_N_Mux_3_2_22_4_97_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_100
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_100_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_101
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_101_out1 = s_reg_141 == 3'd6;

         // rtl_instance:dut/dut_Eqi5u3_4_102
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_102_out1 = s_reg_141 == 3'd5;

         // rtl_instance:dut/dut_Eqi3u3_4_103
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_103_out1 = s_reg_141 == 3'd3;

         // rtl_instance:dut/dut_Eqi2u3_4_104
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_104_out1 = s_reg_141 == 3'd2;

         // rtl_instance:dut/dut_Eqi1u3_4_105
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_105_out1 = s_reg_141 == 3'd1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_106
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_106_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_146 or dut_Eqi7u3_4_100_out1)
          begin :dut_N_Mux_8_2_23_4_107
            if (dut_Eqi7u3_4_100_out1) begin
               dut_N_Mux_8_2_23_4_107_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_107_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_146 or dut_Eqi6u3_4_101_out1)
          begin :dut_N_Mux_8_2_23_4_108
            if (dut_Eqi6u3_4_101_out1) begin
               dut_N_Mux_8_2_23_4_108_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_108_out1 = s_reg_144;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_146 or dut_Eqi5u3_4_102_out1)
          begin :dut_N_Mux_8_2_23_4_109
            if (dut_Eqi5u3_4_102_out1) begin
               dut_N_Mux_8_2_23_4_109_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_109_out1 = s_reg_145;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_110
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_110_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_147 or dut_Eqi3u3_4_103_out1)
          begin :dut_N_Mux_8_2_23_4_111
            if (dut_Eqi3u3_4_103_out1) begin
               dut_N_Mux_8_2_23_4_111_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_111_out1 = s_reg_147;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_148 or dut_Eqi2u3_4_104_out1)
          begin :dut_N_Mux_8_2_23_4_112
            if (dut_Eqi2u3_4_104_out1) begin
               dut_N_Mux_8_2_23_4_112_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_112_out1 = s_reg_148;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_149 or dut_Eqi1u3_4_105_out1)
          begin :dut_N_Mux_8_2_23_4_113
            if (dut_Eqi1u3_4_105_out1) begin
               dut_N_Mux_8_2_23_4_113_out1 = s_reg_146;
            end
            else begin
               dut_N_Mux_8_2_23_4_113_out1 = s_reg_149;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_146 or s_reg_150 or dut_OrReduction_3U_1U_4_106_out1)
          begin :dut_N_Mux_8_2_23_4_114
            if (dut_OrReduction_3U_1U_4_106_out1) begin
               dut_N_Mux_8_2_23_4_114_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_114_out1 = s_reg_146;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_107_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in9
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in9 = dut_N_Mux_8_2_23_4_107_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_108_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in8
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in8 = dut_N_Mux_8_2_23_4_108_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_2_23_4_109_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in7
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in7 = dut_N_Mux_8_2_23_4_109_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_8_21_4_110_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in6
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in6 = dut_N_Mux_8_8_21_4_110_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_2_23_4_111_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in5
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in5 = dut_N_Mux_8_2_23_4_111_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_2_23_4_112_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in4
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in4 = dut_N_Mux_8_2_23_4_112_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_2_23_4_113_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in3
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in3 = dut_N_Mux_8_2_23_4_113_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_114_out1 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_in2
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_in2 = dut_N_Mux_8_2_23_4_114_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_115_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_115_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl124)
          begin :drive_dut_N_Mux_8_8_21_4_115_ctrl1
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_115_ctrl1 = 3'd5;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_115_in9 or dut_N_Mux_8_8_21_4_115_in8 or dut_N_Mux_8_8_21_4_115_in7 or dut_N_Mux_8_8_21_4_115_in6 or dut_N_Mux_8_8_21_4_115_in5 or dut_N_Mux_8_8_21_4_115_in4 or dut_N_Mux_8_8_21_4_115_in3 or dut_N_Mux_8_8_21_4_115_in2 or dut_N_Mux_8_8_21_4_115_ctrl1)
          begin :dut_N_Mux_8_8_21_4_115
            case (dut_N_Mux_8_8_21_4_115_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_115_out1 = dut_N_Mux_8_8_21_4_115_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_116_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_116_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl124 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_116_ctrl1
            if (gs_ctrl124) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_116_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_116_ctrl1 = 3'd6;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_115_in9 or dut_N_Mux_8_8_21_4_115_in8 or dut_N_Mux_8_8_21_4_115_in7 or dut_N_Mux_8_8_21_4_115_in6 or dut_N_Mux_8_8_21_4_115_in5 or dut_N_Mux_8_8_21_4_115_in4 or dut_N_Mux_8_8_21_4_115_in3 or dut_N_Mux_8_8_21_4_115_in2 or dut_N_Mux_8_8_21_4_116_ctrl1)
          begin :dut_N_Mux_8_8_21_4_116
            case (dut_N_Mux_8_8_21_4_116_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_116_out1 = dut_N_Mux_8_8_21_4_115_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_117
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_117_out1 = dut_N_Mux_8_8_21_4_116_out1 < dut_N_Mux_8_8_21_4_115_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_118_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_118_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl124)
          begin :drive_dut_N_Mux_3_2_22_4_118_in3
            if (gs_ctrl124) begin
               // op:thread1/OP233
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_118_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP233
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_118_in3 = 3'd5;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_116_ctrl1 or dut_LessThan_8Ux8U_1U_4_117_out1 or dut_N_Mux_3_2_22_4_118_in3)
          begin :dut_N_Mux_3_2_22_4_118
            if (dut_LessThan_8Ux8U_1U_4_117_out1) begin
               dut_N_Mux_3_2_22_4_118_out1 = dut_N_Mux_8_8_21_4_116_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_118_out1 = dut_N_Mux_3_2_22_4_118_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_121
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_121_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi6u3_4_122
         // Resource=dut_Eqi6u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi6u3_4_122_out1 = s_reg_141 == 3'd6;

         // rtl_instance:dut/dut_Eqi4u3_4_123
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_123_out1 = s_reg_141 == 3'd4;

         // rtl_instance:dut/dut_Eqi3u3_4_124
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_124_out1 = s_reg_141 == 3'd3;

         // rtl_instance:dut/dut_Eqi2u3_4_125
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_125_out1 = s_reg_141 == 3'd2;

         // rtl_instance:dut/dut_Eqi1u3_4_126
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_126_out1 = s_reg_141 == 3'd1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_127
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_127_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_145 or dut_Eqi7u3_4_121_out1)
          begin :dut_N_Mux_8_2_23_4_128
            if (dut_Eqi7u3_4_121_out1) begin
               dut_N_Mux_8_2_23_4_128_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_128_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_145 or dut_Eqi6u3_4_122_out1)
          begin :dut_N_Mux_8_2_23_4_129
            if (dut_Eqi6u3_4_122_out1) begin
               dut_N_Mux_8_2_23_4_129_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_129_out1 = s_reg_144;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_130
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_130_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_146 or dut_Eqi4u3_4_123_out1)
          begin :dut_N_Mux_8_2_23_4_131
            if (dut_Eqi4u3_4_123_out1) begin
               dut_N_Mux_8_2_23_4_131_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_131_out1 = s_reg_146;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_147 or dut_Eqi3u3_4_124_out1)
          begin :dut_N_Mux_8_2_23_4_132
            if (dut_Eqi3u3_4_124_out1) begin
               dut_N_Mux_8_2_23_4_132_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_132_out1 = s_reg_147;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_148 or dut_Eqi2u3_4_125_out1)
          begin :dut_N_Mux_8_2_23_4_133
            if (dut_Eqi2u3_4_125_out1) begin
               dut_N_Mux_8_2_23_4_133_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_133_out1 = s_reg_148;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_149 or dut_Eqi1u3_4_126_out1)
          begin :dut_N_Mux_8_2_23_4_134
            if (dut_Eqi1u3_4_126_out1) begin
               dut_N_Mux_8_2_23_4_134_out1 = s_reg_145;
            end
            else begin
               dut_N_Mux_8_2_23_4_134_out1 = s_reg_149;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_145 or s_reg_150 or dut_OrReduction_3U_1U_4_127_out1)
          begin :dut_N_Mux_8_2_23_4_135
            if (dut_OrReduction_3U_1U_4_127_out1) begin
               dut_N_Mux_8_2_23_4_135_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_135_out1 = s_reg_145;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in9
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in9
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_143 or dut_N_Mux_8_2_23_4_128_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in9
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in9 = s_reg_143;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in9 = dut_N_Mux_8_2_23_4_128_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in8
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in8
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_144 or dut_N_Mux_8_2_23_4_129_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in8
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in8 = s_reg_144;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in8 = dut_N_Mux_8_2_23_4_129_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in7
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in7
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_145 or dut_N_Mux_8_8_21_4_130_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in7
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in7 = s_reg_145;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in7 = dut_N_Mux_8_8_21_4_130_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in6
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in6
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_146 or dut_N_Mux_8_2_23_4_131_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in6
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in6 = s_reg_146;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in6 = dut_N_Mux_8_2_23_4_131_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in5
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in5
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_147 or dut_N_Mux_8_2_23_4_132_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in5
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in5 = s_reg_147;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in5 = dut_N_Mux_8_2_23_4_132_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in4
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in4
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_148 or dut_N_Mux_8_2_23_4_133_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in4
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in4 = s_reg_148;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in4 = dut_N_Mux_8_2_23_4_133_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in3
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_149 or dut_N_Mux_8_2_23_4_134_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in3
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in3 = s_reg_149;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in3 = dut_N_Mux_8_2_23_4_134_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_in2
         // at: dut.cc:65:21 dut.cc:65:12
         always @(s_reg_150 or dut_N_Mux_8_2_23_4_135_out1 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_in2
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in2 = s_reg_150;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_in2 = dut_N_Mux_8_2_23_4_135_out1;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_136_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_136_ctrl1
         // at: dut.cc:65:21
         always @(s_reg_141 or gs_ctrl144)
          begin :drive_dut_N_Mux_8_8_21_4_136_ctrl1
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_ctrl1 = s_reg_141;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_136_ctrl1 = 3'd6;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_136_in9 or dut_N_Mux_8_8_21_4_136_in8 or dut_N_Mux_8_8_21_4_136_in7 or dut_N_Mux_8_8_21_4_136_in6 or dut_N_Mux_8_8_21_4_136_in5 or dut_N_Mux_8_8_21_4_136_in4 or dut_N_Mux_8_8_21_4_136_in3 or dut_N_Mux_8_8_21_4_136_in2 or dut_N_Mux_8_8_21_4_136_ctrl1)
          begin :dut_N_Mux_8_8_21_4_136
            case (dut_N_Mux_8_8_21_4_136_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_136_out1 = dut_N_Mux_8_8_21_4_136_in9;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_21_4_137_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_21_4_137_ctrl1
         // at: dut.cc:65:12 dut.cc:66:16
         always @(gs_ctrl144 or s_reg_152_slice)
          begin :drive_dut_N_Mux_8_8_21_4_137_ctrl1
            if (gs_ctrl144) begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_137_ctrl1 = s_reg_152_slice;
            end
            else begin
               // op:thread1/OP57
               dut_N_Mux_8_8_21_4_137_ctrl1 = 3'd7;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(dut_N_Mux_8_8_21_4_136_in9 or dut_N_Mux_8_8_21_4_136_in8 or dut_N_Mux_8_8_21_4_136_in7 or dut_N_Mux_8_8_21_4_136_in6 or dut_N_Mux_8_8_21_4_136_in5 or dut_N_Mux_8_8_21_4_136_in4 or dut_N_Mux_8_8_21_4_136_in3 or dut_N_Mux_8_8_21_4_136_in2 or dut_N_Mux_8_8_21_4_137_ctrl1)
          begin :dut_N_Mux_8_8_21_4_137
            case (dut_N_Mux_8_8_21_4_137_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in2;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in3;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in4;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in5;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in6;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in7;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in8;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_137_out1 = dut_N_Mux_8_8_21_4_136_in9;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_138
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_138_out1 = dut_N_Mux_8_8_21_4_137_out1 < dut_N_Mux_8_8_21_4_136_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_22_4_139_in3
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_22_4_139_in3
         // at: dut.cc:65:5
         always @(s_reg_141 or gs_ctrl144)
          begin :drive_dut_N_Mux_3_2_22_4_139_in3
            if (gs_ctrl144) begin
               // op:thread1/OP262
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_139_in3 = s_reg_141;
            end
            else begin
               // op:thread1/OP262
               // at: dut.cc:65:5
               // Call Stack: 
               // in function thread1 called from dut.cc:65:5
               dut_N_Mux_3_2_22_4_139_in3 = 3'd6;
            end
         end

         // rtl_instance:dut/dut_N_Mux_3_2_22_4
         always @(dut_N_Mux_8_8_21_4_137_ctrl1 or dut_LessThan_8Ux8U_1U_4_138_out1 or dut_N_Mux_3_2_22_4_139_in3)
          begin :dut_N_Mux_3_2_22_4_139
            if (dut_LessThan_8Ux8U_1U_4_138_out1) begin
               dut_N_Mux_3_2_22_4_139_out1 = dut_N_Mux_8_8_21_4_137_ctrl1;
            end
            else begin
               dut_N_Mux_3_2_22_4_139_out1 = dut_N_Mux_3_2_22_4_139_in3;
            end
         end

         // rtl_instance:dut/dut_Eqi7u3_4_142
         // Resource=dut_Eqi7u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi7u3_4_142_out1 = s_reg_141 == 3'd7;

         // rtl_instance:dut/dut_Eqi5u3_4_143
         // Resource=dut_Eqi5u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi5u3_4_143_out1 = s_reg_141 == 3'd5;

         // rtl_instance:dut/dut_Eqi4u3_4_144
         // Resource=dut_Eqi4u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi4u3_4_144_out1 = s_reg_141 == 3'd4;

         // rtl_instance:dut/dut_Eqi3u3_4_145
         // Resource=dut_Eqi3u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi3u3_4_145_out1 = s_reg_141 == 3'd3;

         // rtl_instance:dut/dut_Eqi2u3_4_146
         // Resource=dut_Eqi2u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi2u3_4_146_out1 = s_reg_141 == 3'd2;

         // rtl_instance:dut/dut_Eqi1u3_4_147
         // Resource=dut_Eqi1u3_4, Function=eq : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Eqi1u3_4_147_out1 = s_reg_141 == 3'd1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_148
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_148_out1 = (|s_reg_141);

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_143 or s_reg_144 or dut_Eqi7u3_4_142_out1)
          begin :dut_N_Mux_8_2_23_4_149
            if (dut_Eqi7u3_4_142_out1) begin
               dut_N_Mux_8_2_23_4_149_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_149_out1 = s_reg_143;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_21_4
         always @(s_reg_141 or s_reg_143 or s_reg_144 or s_reg_145 or s_reg_146 or s_reg_147 or s_reg_148 or s_reg_149 or s_reg_150)
          begin :dut_N_Mux_8_8_21_4_150
            case (s_reg_141) 

               3'd0:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_150;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_149;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_148;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_147;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_146;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_145;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_144;
               end
               
               default:                begin
                  dut_N_Mux_8_8_21_4_150_out1 = s_reg_143;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_145 or dut_Eqi5u3_4_143_out1)
          begin :dut_N_Mux_8_2_23_4_151
            if (dut_Eqi5u3_4_143_out1) begin
               dut_N_Mux_8_2_23_4_151_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_151_out1 = s_reg_145;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_146 or dut_Eqi4u3_4_144_out1)
          begin :dut_N_Mux_8_2_23_4_152
            if (dut_Eqi4u3_4_144_out1) begin
               dut_N_Mux_8_2_23_4_152_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_152_out1 = s_reg_146;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_147 or dut_Eqi3u3_4_145_out1)
          begin :dut_N_Mux_8_2_23_4_153
            if (dut_Eqi3u3_4_145_out1) begin
               dut_N_Mux_8_2_23_4_153_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_153_out1 = s_reg_147;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_148 or dut_Eqi2u3_4_146_out1)
          begin :dut_N_Mux_8_2_23_4_154
            if (dut_Eqi2u3_4_146_out1) begin
               dut_N_Mux_8_2_23_4_154_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_154_out1 = s_reg_148;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_149 or dut_Eqi1u3_4_147_out1)
          begin :dut_N_Mux_8_2_23_4_155
            if (dut_Eqi1u3_4_147_out1) begin
               dut_N_Mux_8_2_23_4_155_out1 = s_reg_144;
            end
            else begin
               dut_N_Mux_8_2_23_4_155_out1 = s_reg_149;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_23_4
         always @(s_reg_144 or s_reg_150 or dut_OrReduction_3U_1U_4_148_out1)
          begin :dut_N_Mux_8_2_23_4_156
            if (dut_OrReduction_3U_1U_4_148_out1) begin
               dut_N_Mux_8_2_23_4_156_out1 = s_reg_150;
            end
            else begin
               dut_N_Mux_8_2_23_4_156_out1 = s_reg_144;
            end
         end

         // rtl_process:dut/drive_global_state
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_global_state
            if (rst == 1'b0) begin
               // basic_block:gen_do_stall_reg_full/BB8
               global_state <= 5'd00;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_global_state_next
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(dut_Lti8s5_4_12_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               5'd00, 5'd16:                begin
                  // basic_block:thread1/BB7
                  global_state_next = 5'd01;
               end
               
               5'd01, 5'd03:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     // basic_block:thread1/BB13
                     global_state_next = 5'd02;
                  end
                  else begin
                     // basic_block:thread1/BB18
                     global_state_next = 5'd04;
                  end
               end
               
               5'd04:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB23
                     global_state_next = 5'd06;
                  end
               end
               
               5'd05:                begin
                  // basic_block:thread1/BB18
                  global_state_next = 5'd04;
               end
               
               5'd06:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB28
                     global_state_next = 5'd08;
                  end
               end
               
               5'd07:                begin
                  // basic_block:thread1/BB23
                  global_state_next = 5'd06;
               end
               
               5'd08:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB33
                     global_state_next = 5'd10;
                  end
               end
               
               5'd09:                begin
                  // basic_block:thread1/BB28
                  global_state_next = 5'd08;
               end
               
               5'd10:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB38
                     global_state_next = 5'd12;
                  end
               end
               
               5'd11:                begin
                  // basic_block:thread1/BB33
                  global_state_next = 5'd10;
               end
               
               5'd12:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB43
                     global_state_next = 5'd14;
                  end
               end
               
               5'd13:                begin
                  // basic_block:thread1/BB38
                  global_state_next = 5'd12;
               end
               
               5'd14:                begin
                  if (dut_Lti8s5_4_12_out1) begin
                     global_state_next = global_state + 5'd01;
                  end
                  else begin
                     // basic_block:thread1/BB49
                     global_state_next = 5'd16;
                  end
               end
               
               5'd15:                begin
                  // basic_block:thread1/BB43
                  global_state_next = 5'd14;
               end
               
               default:                begin
                  global_state_next = global_state + 5'd01;
               end
               
            endcase

         end

         // rtl_process:dut/drive_gs_ctrl0
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl0
            if (rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl18
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl18
            if (rst == 1'b0) begin
               gs_ctrl18 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03, 5'd06, 5'd08, 5'd10, 5'd12, 5'd14:                         begin
                           gs_ctrl18 <= 2'd1;
                        end
                        
                        5'd04:                         begin
                           gs_ctrl18 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl18 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl44
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl44
            if (rst == 1'b0) begin
               gs_ctrl44 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd05:                         begin
                           gs_ctrl44 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl44 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl52
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl52
            if (rst == 1'b0) begin
               gs_ctrl52 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03, 5'd05:                         begin
                           gs_ctrl52 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl52 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl61
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl61
            if (rst == 1'b0) begin
               gs_ctrl61 <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd03:                         begin
                           gs_ctrl61 <= 2'd1;
                        end
                        
                        5'd05:                         begin
                           gs_ctrl61 <= 2'd2;
                        end
                        
                        default:                         begin
                           gs_ctrl61 <= 2'd0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl64
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl64
            if (rst == 1'b0) begin
               gs_ctrl64 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd07:                         begin
                           gs_ctrl64 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl64 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl84
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl84
            if (rst == 1'b0) begin
               gs_ctrl84 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd09:                         begin
                           gs_ctrl84 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl84 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl104
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl104
            if (rst == 1'b0) begin
               gs_ctrl104 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd11:                         begin
                           gs_ctrl104 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl104 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl124
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl124
            if (rst == 1'b0) begin
               gs_ctrl124 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd13:                         begin
                           gs_ctrl124 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl124 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_gs_ctrl144
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB13 : SCHED_2
         //    FSM: global_state == 2
         // BB15 : SCHED_3
         //    FSM: global_state == 3
         // BB18 : SCHED_7
         //    FSM: global_state == 4
         // BB19 : SCHED_8
         //    FSM: global_state == 5
         // BB23 : SCHED_12
         //    FSM: global_state == 6
         // BB24 : SCHED_13
         //    FSM: global_state == 7
         // BB28 : SCHED_17
         //    FSM: global_state == 8
         // BB29 : SCHED_18
         //    FSM: global_state == 9
         // BB33 : SCHED_22
         //    FSM: global_state == 10
         // BB34 : SCHED_23
         //    FSM: global_state == 11
         // BB38 : SCHED_27
         //    FSM: global_state == 12
         // BB39 : SCHED_28
         //    FSM: global_state == 13
         // BB43 : SCHED_32
         //    FSM: global_state == 14
         // BB44 : SCHED_33
         //    FSM: global_state == 15
         // BB49 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 16
         always @(posedge clk)
          begin :drive_gs_ctrl144
            if (rst == 1'b0) begin
               gs_ctrl144 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        5'd15:                         begin
                           gs_ctrl144 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl144 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_din_busy
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_din_busy
         // at: cynw_p2p.h:1771:13
         assign din_busy = dut_gen_busy_r_1_2_out1[2];

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // Resource=dut_gen_busy_r_1, Function=not not and and or : Inputs=1,1,1 Outputs=3
         // Implements 1 operation(s)
         // at: cynw_p2p.h:1739:8
         assign dut_gen_busy_r_1_2_out1 = {dut_gen_busy_r_1_2_gnew_req, {dut_gen_busy_r_1_2_gdiv, dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next}};

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:4469
         assign dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next = ~dut_gen_busy_r_1_2_gdiv;

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:4469
         assign dut_gen_busy_r_1_2_gdiv = din_vld & !dut_gen_busy_r_1_2_gnew_req;

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:4469
         assign dut_gen_busy_r_1_2_gnew_req = din_m_busy_req_0 & (din_m_unvalidated_req | din_vld);

         // rtl_process:dut/drive_din_m_unvalidated_req
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_din_m_unvalidated_req
         // at: cynw_p2p.h:1802:2
         // at: cynw_p2p.h:1796:10
         // at: cynw_p2p.h:1807:13
         // at: cynw_p2p.h:1761:36
         always @(posedge clk)
          begin :drive_din_m_unvalidated_req
            if (rst == 1'b0) begin
               // op:gen_unvalidated_req/OP0
               // at: cynw_p2p.h:1802:2
               // Call Stack: 
               // in function gen_unvalidated_req called from cynw_p2p.h:1802:2
               din_m_unvalidated_req <= 1'd1;
            end
            else begin
               // op:gen_unvalidated_req/OP6
               // at: cynw_p2p.h:1807:13
               // Call Stack: 
               // in function gen_unvalidated_req called from cynw_p2p.h:1807:13
               din_m_unvalidated_req <= dut_N_Muxb_1_2_16_4_1_out1;
            end
         end

         // rtl_instance:dut/dut_N_Muxb_1_2_16_4
         // This resource is split across multiple concurrent processes.
         // See line:4469
         always @(din_vld or din_m_busy_req_0 or din_m_unvalidated_req)
          begin :dut_N_Muxb_1_2_16_4_1
            if (din_m_busy_req_0) begin
               dut_N_Muxb_1_2_16_4_1_out1 = din_m_unvalidated_req;
            end
            else begin
               dut_N_Muxb_1_2_16_4_1_out1 = din_vld;
            end
         end

         // rtl_process:dut/drive_dout_vld
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_vld
         // at: cynw_p2p.h:5144:18
         assign dout_vld = dut_Or_1Ux1U_1U_4_5_out1;

         // rtl_instance:dut/dut_Or_1Ux1U_1U_4_5
         // Resource=dut_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_p2p.h:5144:50
         assign dut_Or_1Ux1U_1U_4_5_out1 = dout_m_unacked_req | dut_Xor_1Ux1U_1U_1_4_out1;

         // rtl_process:dut/drive_dout_m_unacked_req
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_dout_m_unacked_req
         // at: cynw_p2p.h:5144:29
         // at: cynw_p2p.h:5156:9
         // at: cynw_p2p.h:5159:9
         always @(posedge clk)
          begin :drive_dout_m_unacked_req
            if (rst == 1'b0) begin
               // op:gen_unacked_req/OP55
               // at: cynw_p2p.h:5156:9
               // Call Stack: 
               // in function gen_unacked_req called from cynw_p2p.h:5156:9
               dout_m_unacked_req <= 1'd0;
            end
            else begin
               // op:gen_unacked_req/OP57
               // at: cynw_p2p.h:5159:9
               // Call Stack: 
               // in function gen_unacked_req called from cynw_p2p.h:5159:9
               dout_m_unacked_req <= dut_And_1Ux1U_1U_1_6_out1;
            end
         end

         // rtl_instance:dut/dut_And_1Ux1U_1U_1_6
         // Resource=dut_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_p2p.h:5171:43
         assign dut_And_1Ux1U_1U_1_6_out1 = dout_busy & dout_vld;

         // rtl_instance:dut/dut_Xor_1Ux1U_1U_1_4
         // Resource=dut_Xor_1Ux1U_1U_1, Function=xor : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_comm_util.h:1331:70
         assign dut_Xor_1Ux1U_1U_1_4_out1 = dout_m_req_m_trig_req ^ dout_m_req_m_prev_trig_req;

         // rtl_process:dut/drive_dout_m_req_m_prev_trig_req
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_dout_m_req_m_prev_trig_req
         // at: cynw_comm_util.h:1343:9
         // at: cynw_comm_util.h:1345:9
         // at: cynw_comm_util.h:1331:73
         always @(posedge clk)
          begin :drive_dout_m_req_m_prev_trig_req
            if (rst == 1'b0) begin
               // op:gen_prev_trig_reg/OP10
               // at: cynw_comm_util.h:1343:9
               // Call Stack: 
               // in function gen_prev_trig_reg called from cynw_comm_util.h:1343:9
               dout_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               // op:gen_prev_trig_reg/OP12
               // at: cynw_comm_util.h:1345:9
               // Call Stack: 
               // in function gen_prev_trig_reg called from cynw_comm_util.h:1345:9
               dout_m_req_m_prev_trig_req <= dout_m_req_m_trig_req;
            end
         end

         // rtl_instance:dut/dut_Not_1U_1U_1_7
         // Resource=dut_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_comm_util.h:1367:25
         assign dut_Not_1U_1U_1_7_out1 = !dout_m_req_m_trig_req;

         // rtl_process:dut/drive_dout_data
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_data
         // at: cynw_p2p.h:5278:13
         assign dout_data = {{24'b000000000000000000000000, dout_data_slice[63:56]}, {24'd00000000, {dout_data_slice[55:48], {24'd00000000, {dout_data_slice[47:40], {24'd00000000, {dout_data_slice[39:32], {24'd00000000, {dout_data_slice[31:24], {24'd00000000, {dout_data_slice[23:16], {24'd00000000, {dout_data_slice[15:8], {24'd00000000, dout_data_slice[7:0]}}}}}}}}}}}}}};


endmodule


