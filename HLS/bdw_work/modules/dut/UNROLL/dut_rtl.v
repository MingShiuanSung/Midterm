// Generated by stratus_hls 19.12-s100  (91710.131054)
// Mon Apr 18 10:51:05 2022
// from dut.cc

`timescale 1ps / 1ps

      
module dut(clk, rst, din_busy, din_vld, din_data_a, din_data_b, din_data_c, din_data_d, din_data_e, din_data_f, din_data_g, din_data_h, dout_busy, dout_vld, dout_data);

      input clk;
      input rst;
      input din_vld;
      input [7:0] din_data_a;
      input [7:0] din_data_b;
      input [7:0] din_data_c;
      input [7:0] din_data_d;
      input [7:0] din_data_e;
      input [7:0] din_data_f;
      input [7:0] din_data_g;
      input [7:0] din_data_h;
      input dout_busy;
      output din_busy;
      output dout_vld;
      output [255:0] dout_data;
      reg dout_m_req_m_prev_trig_req;
      reg dout_m_unacked_req;
      wire dut_Xor_1Ux1U_1U_1_4_out1;
      wire dut_Or_1Ux1U_1U_4_5_out1;
      reg dut_N_Muxb_1_2_12_4_1_out1;
      reg din_m_unvalidated_req;
      wire dut_gen_busy_r_1_2_gnew_req;
      wire dut_gen_busy_r_1_2_gdiv;
      wire dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next;
      reg[1:0] global_state_next;
      wire dut_Equal_3Ux3U_1U_4_151_out1;
      wire[2:0] dut_Equal_3Ux3U_1U_4_151_in2;
      wire dut_LessThan_8Ux8U_1U_4_148_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_147_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_146_out1;
      wire dut_Equal_3Ux3U_1U_4_145_out1;
      wire dut_Equal_3Ux3U_1U_4_144_out1;
      reg[1:0] dut_N_Mux_3_2_6_4_143_out1_slice;
      wire dut_LessThan_8Ux8U_1U_4_142_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_141_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_140_out1;
      wire dut_Equal_3Ux3U_1U_4_139_out1;
      wire dut_Equal_3Ux3U_1U_4_138_out1;
      reg[1:0] dut_N_Mux_3_2_5_1_137_out1_slice;
      wire dut_LessThan_8Ux8U_1U_4_136_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_135_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_134_out1;
      wire dut_Equal_3Ux3U_1U_4_133_out1;
      wire dut_Equal_3Ux3U_1U_4_132_out1;
      reg[2:0] dut_N_Mux_3_2_6_4_131_out1;
      wire dut_LessThan_8Ux8U_1U_4_130_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_129_out1;
      reg[2:0] dut_N_Mux_3_2_5_1_128_out1;
      /*signed*/wire[2:0] dut_N_Mux_3_2_5_1_128_in2;
      wire dut_LessThan_8Ux8U_1U_4_127_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_126_out1;
      wire[2:0] dut_N_Mux_8_8_0_4_126_ctrl1;
      wire dut_LessThan_8Ux8U_1U_4_125_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_120_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_119_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_118_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_117_out1;
      wire dut_Equal_3Ux3U_1U_4_116_out1;
      wire dut_Equal_3Ux3U_1U_4_115_out1;
      wire dut_Equal_3Ux3U_1U_4_114_out1;
      wire dut_Equal_3Ux3U_1U_4_113_out1;
      reg[2:0] dut_N_Mux_3_2_6_4_112_out1;
      wire dut_LessThan_8Ux8U_1U_4_111_out1;
      reg[7:0] dut_N_Mux_8_4_9_4_110_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_109_out1;
      reg[2:0] dut_N_Mux_3_2_5_1_108_out1;
      wire dut_Equal_3Ux3U_1U_4_107_out1;
      wire dut_LessThan_8Ux8U_1U_4_106_out1;
      reg[7:0] dut_N_Mux_8_3_8_1_105_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_104_out1;
      reg[2:0] dut_N_Mux_3_2_4_1_103_out1;
      wire dut_Equal_3Ux3U_1U_4_102_out1;
      wire dut_LessThan_8Ux8U_1U_4_101_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_100_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_99_out1;
      wire dut_Equal_3Ux2U_1U_1_98_out1;
      wire dut_Equal_3Ux3U_1U_4_97_out1;
      reg[2:0] dut_N_Mux_3_2_3_4_96_out1;
      wire dut_LessThan_8Ux8U_1U_4_95_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_94_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_93_out1;
      wire dut_Equal_3Ux2U_1U_4_92_out1;
      wire dut_Equal_3Ux3U_1U_4_91_out1;
      wire dut_Equal_3Ux1U_1U_4_90_out1;
      wire dut_OrReduction_3U_1U_4_89_out1;
      reg[2:0] dut_N_Mux_3_2_6_4_88_out1;
      wire dut_LessThan_8Ux8U_1U_4_87_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_86_out1;
      reg[2:0] dut_N_Mux_3_2_5_1_85_out1;
      wire dut_LessThan_8Ux8U_1U_4_84_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_83_out1;
      reg[2:0] dut_N_Mux_3_2_4_4_82_out1;
      wire dut_LessThan_8Ux8U_1U_4_81_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_80_out1;
      reg[2:0] dut_N_Mux_3_2_3_4_79_out1;
      wire dut_LessThan_8Ux8U_1U_4_78_out1;
      wire[2:0] dut_N_Mux_8_8_0_4_77_ctrl1;
      wire dut_Equal_3Ux3U_1U_4_67_out1;
      wire dut_Equal_3Ux3U_1U_4_66_out1;
      wire dut_Equal_3Ux3U_1U_4_65_out1;
      wire dut_Equal_3Ux3U_1U_4_64_out1;
      wire dut_Equal_3Ux2U_1U_1_63_out1;
      wire dut_Equal_3Ux2U_1U_1_62_out1;
      wire dut_OrReduction_3U_1U_4_61_out1;
      reg[2:0] dut_N_Mux_3_2_6_4_60_out1;
      wire dut_LessThan_8Ux8U_1U_4_59_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_58_out1;
      reg[2:0] dut_N_Mux_3_2_5_1_57_out1;
      wire dut_LessThan_8Ux8U_1U_4_56_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_55_out1;
      reg[2:0] dut_N_Mux_3_2_4_1_54_out1;
      wire dut_LessThan_8Ux8U_1U_4_53_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_52_out1;
      reg[2:0] dut_N_Mux_3_2_3_1_51_out1;
      wire dut_LessThan_8Ux8U_1U_4_50_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_49_out1;
      reg[2:0] dut_N_Mux_3_2_2_1_48_out1;
      /*signed*/wire[2:0] dut_N_Mux_3_2_2_1_48_in2;
      wire dut_LessThan_8Ux8U_1U_4_47_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_46_out1;
      wire[2:0] dut_N_Mux_8_8_0_4_46_ctrl1;
      reg[7:0] dut_N_Mux_8_2_7_4_45_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_44_out1;
      wire dut_OrReduction_3U_1U_4_43_out1;
      wire dut_LessThan_8Ux8U_1U_4_42_out1;
      wire dut_GreaterThanEQ_8Ux8U_1U_4_41_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_40_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_39_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_38_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_37_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_36_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_35_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_34_out1;
      wire dut_Equal_3Ux2U_1U_4_33_out1;
      wire dut_Equal_3Ux3U_1U_4_32_out1;
      wire dut_Equal_3Ux3U_1U_4_31_out1;
      wire dut_Equal_3Ux3U_1U_4_30_out1;
      wire dut_Equal_3Ux3U_1U_4_29_out1;
      wire dut_Equal_3Ux1U_1U_1_28_out1;
      wire dut_Equal_3Ux2U_1U_1_27_out1;
      reg[2:0] dut_N_Mux_3_2_6_4_26_out1;
      wire dut_LessThan_8Ux8U_1U_4_25_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_24_out1;
      reg[2:0] dut_N_Mux_3_2_5_1_23_out1;
      wire dut_LessThan_8Ux8U_1U_4_22_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_21_out1;
      reg[2:0] dut_N_Mux_3_2_4_1_20_out1;
      wire dut_LessThan_8Ux8U_1U_4_19_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_18_out1;
      reg[2:0] dut_N_Mux_3_2_3_1_17_out1;
      wire dut_LessThan_8Ux8U_1U_4_16_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_15_out1;
      reg[1:0] dut_N_Mux_3_2_2_1_14_out1_slice;
      wire dut_LessThan_8Ux8U_1U_4_13_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_12_out1;
      reg[1:0] dut_N_Mux_3_2_1_1_11_out1_slice;
      wire dut_LessThan_8Ux8U_1U_4_10_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_9_out1;
      wire dut_LessThan_8Ux8U_1U_4_8_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_77_out1;
      reg[7:0] s_reg_20;
      wire dut_LessThan_8Ux8U_1U_4_76_out1;
      reg s_reg_19_slice;
      reg[7:0] dut_N_Mux_8_2_7_4_75_out1;
      reg[7:0] s_reg_18;
      reg[7:0] dut_N_Mux_8_8_0_4_74_out1;
      reg[7:0] s_reg_17;
      reg[7:0] dut_N_Mux_8_2_7_4_73_out1;
      reg[7:0] s_reg_16;
      reg[7:0] dut_N_Mux_8_2_7_4_72_out1;
      reg[7:0] s_reg_15;
      reg[7:0] dut_N_Mux_8_2_7_4_71_out1;
      reg[7:0] s_reg_14;
      reg[7:0] dut_N_Mux_8_2_7_4_70_out1;
      reg[7:0] s_reg_13;
      reg[7:0] dut_N_Mux_8_2_7_4_69_out1;
      reg[7:0] s_reg_12;
      reg[7:0] dut_N_Mux_8_2_7_4_68_out1;
      reg[7:0] s_reg_11;
      wire[2:0] dut_gen_busy_r_1_2_out1;
      wire dut_And_1Ux1U_1U_1_6_out1;
      wire dut_Not_1U_1U_1_7_out1;
      reg dout_m_req_m_trig_req;
      reg[1:0] global_state;
      reg din_m_busy_req_0;
      reg[7:0] dut_N_Mux_8_2_7_4_152_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_153_out1;
      reg[7:0] dut_N_Mux_8_3_11_4_149_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_150_out1;
      reg[7:0] dut_N_Mux_8_5_10_4_121_out1;
      reg[7:0] dut_N_Mux_8_8_0_4_122_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_123_out1;
      reg[7:0] dut_N_Mux_8_2_7_4_124_out1;
      reg[63:0] dout_data_slice;
      reg stall0;

         // rtl_process:dut/drive_dout_data_slice
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_data_slice
         // at: cynw_p2p.h:5278:13
         always @(posedge clk)
          begin :drive_dout_data_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP268
                  // at: cynw_p2p.h:5278:13
                  // Call Stack: 
                  // in function nb_put_work called from cynw_p2p.h:5063:7
                  // in function put called from dut.cc:85:8
                  dout_data_slice <= {dut_N_Mux_8_2_7_4_152_out1, {dut_N_Mux_8_8_0_4_153_out1, {dut_N_Mux_8_3_11_4_149_out1, {dut_N_Mux_8_8_0_4_150_out1, {dut_N_Mux_8_5_10_4_121_out1, {dut_N_Mux_8_8_0_4_122_out1, {dut_N_Mux_8_2_7_4_123_out1, dut_N_Mux_8_2_7_4_124_out1}}}}}}};
               end
               
            endcase

         end

         // rtl_process:dut/drive_din_m_busy_req_0
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_din_m_busy_req_0
         // at: cynw_p2p.h:1806:17
         // at: cynw_p2p.h:1761:12
         // at: cynw_p2p.h:1515:2
         // at: cynw_p2p.h:1595:7
         // at: cynw_p2p.h:1620:7
         always @(posedge clk)
          begin :drive_din_m_busy_req_0
            if (rst == 1'b0) begin
               // op:thread1/OP62
               // at: cynw_p2p.h:1515:2
               // Call Stack: 
               // in function reset called from dut.cc:33:7
               din_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        2'd0, 2'd3:                         begin
                           // op:thread1/OP65
                           // at: cynw_p2p.h:1595:7
                           // Call Stack: 
                           // in function get_start called from cynw_p2p.h:1455:7
                           // in function get called from dut.cc:41:23
                           din_m_busy_req_0 <= 1'd0;
                        end
                        
                        2'd1:                         begin
                           // op:thread1/OP68
                           // at: cynw_p2p.h:1620:7
                           // Call Stack: 
                           // in function get_end called from cynw_p2p.h:1478:7
                           // in function get called from dut.cc:41:23
                           din_m_busy_req_0 <= 1'd1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_dout_m_req_m_trig_req
         // Sharing or Control mux
         // Sharing/Controlling 5 operation(s) on drive_dout_m_req_m_trig_req
         // at: cynw_comm_util.h:1345:27
         // at: cynw_comm_util.h:1331:52
         // at: cynw_comm_util.h:1367:26
         // at: cynw_comm_util.h:1293:7
         // at: cynw_comm_util.h:1286:2
         always @(posedge clk)
          begin :drive_dout_m_req_m_trig_req
            if (rst == 1'b0) begin
               // op:thread1/OP64
               // at: cynw_comm_util.h:1293:7
               // Call Stack: 
               // in function reset called from cynw_p2p.h:5087:13
               // in function reset called from dut.cc:34:8
               dout_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        2'd2:                         begin
                           // op:thread1/OP270
                           // at: cynw_comm_util.h:1286:2
                           // Call Stack: 
                           // in function trig called from cynw_p2p.h:5279:8
                           // in function nb_put_work called from cynw_p2p.h:5063:7
                           // in function put called from dut.cc:85:8
                           dout_m_req_m_trig_req <= dut_Not_1U_1U_1_7_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_stall0
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_stall0
         // at: cynw_p2p.h:1532:33
         // at: cynw_p2p.h:1849:47
         // at: cynw_p2p.h:1464:9
         // at: cynw_p2p.h:5071:2
         always @(dut_gen_busy_r_1_2_out1[0] or dut_And_1Ux1U_1U_1_6_out1 or global_state)
          begin :drive_stall0
            case (global_state) 

               2'd1:                begin
                  // op:thread1/OP67
                  // at: cynw_p2p.h:1464:9
                  // Call Stack: 
                  // in function get called from dut.cc:41:23
                  stall0 = dut_gen_busy_r_1_2_out1[0];
               end
               
               2'd3:                begin
                  // op:thread1/OP272
                  // at: cynw_p2p.h:5071:2
                  // Call Stack: 
                  // in function put called from dut.cc:85:8
                  stall0 = dut_And_1Ux1U_1U_1_6_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_11
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_11
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_11
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP153
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_11 <= dut_N_Mux_8_2_7_4_68_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_12
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_12
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_12
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP155
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_12 <= dut_N_Mux_8_2_7_4_69_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_13
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_13
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_13
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP145
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_13 <= dut_N_Mux_8_2_7_4_70_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_14
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_14
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_14
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP147
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_14 <= dut_N_Mux_8_2_7_4_71_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_15
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_15
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_15
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP149
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_15 <= dut_N_Mux_8_2_7_4_72_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_16
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_16
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_16
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP151
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_16 <= dut_N_Mux_8_2_7_4_73_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_17
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_17
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_17
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP156
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_17 <= dut_N_Mux_8_8_0_4_74_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_18
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_18
         // at: dut.cc:72:7
         always @(posedge clk)
          begin :drive_s_reg_18
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP158
                  // at: dut.cc:72:7
                  // Call Stack: 
                  // in function thread1 called from dut.cc:72:7
                  s_reg_18 <= dut_N_Mux_8_2_7_4_75_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_19_slice
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_19_slice
         // at: dut.cc:66:6
         always @(posedge clk)
          begin :drive_s_reg_19_slice
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP160
                  // at: dut.cc:66:6
                  // Call Stack: 
                  // in function thread1 called from dut.cc:66:6
                  s_reg_19_slice <= dut_LessThan_8Ux8U_1U_4_76_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_s_reg_20
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_s_reg_20
         // at: dut.cc:65:21
         always @(posedge clk)
          begin :drive_s_reg_20
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  // op:thread1/OP162
                  // at: dut.cc:65:21
                  // Call Stack: 
                  // in function thread1 called from dut.cc:65:21
                  s_reg_20 <= dut_N_Mux_8_8_0_4_77_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_8
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_8_out1 = din_data_b < din_data_a;

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_h or din_data_g or din_data_b or din_data_a or dut_LessThan_8Ux8U_1U_4_8_out1)
          begin :dut_N_Mux_8_8_0_4_9
            case ({1'b0, dut_LessThan_8Ux8U_1U_4_8_out1}) 

               2'd0:                begin
                  dut_N_Mux_8_8_0_4_9_out1 = din_data_a;
               end
               
               2'd1:                begin
                  dut_N_Mux_8_8_0_4_9_out1 = din_data_b;
               end
               
               2'd2:                begin
                  dut_N_Mux_8_8_0_4_9_out1 = din_data_g;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_9_out1 = din_data_h;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_10
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_10_out1 = din_data_c < dut_N_Mux_8_8_0_4_9_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_1_1
         always @(dut_LessThan_8Ux8U_1U_4_8_out1 or dut_LessThan_8Ux8U_1U_4_10_out1)
          begin :dut_N_Mux_3_2_1_1_11
            if (dut_LessThan_8Ux8U_1U_4_10_out1) begin
               dut_N_Mux_3_2_1_1_11_out1_slice = 2'd2;
            end
            else begin
               dut_N_Mux_3_2_1_1_11_out1_slice = {1'b0, dut_LessThan_8Ux8U_1U_4_8_out1};
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_1_1_11_out1_slice)
          begin :dut_N_Mux_8_8_0_4_12
            case (dut_N_Mux_3_2_1_1_11_out1_slice) 

               2'd0:                begin
                  dut_N_Mux_8_8_0_4_12_out1 = din_data_a;
               end
               
               2'd1:                begin
                  dut_N_Mux_8_8_0_4_12_out1 = din_data_b;
               end
               
               2'd2:                begin
                  dut_N_Mux_8_8_0_4_12_out1 = din_data_c;
               end
               
               2'd3:                begin
                  dut_N_Mux_8_8_0_4_12_out1 = din_data_d;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_13
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_13_out1 = din_data_d < dut_N_Mux_8_8_0_4_12_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_2_1
         always @(dut_LessThan_8Ux8U_1U_4_13_out1 or dut_N_Mux_3_2_1_1_11_out1_slice)
          begin :dut_N_Mux_3_2_2_1_14
            if (dut_LessThan_8Ux8U_1U_4_13_out1) begin
               dut_N_Mux_3_2_2_1_14_out1_slice = 2'd3;
            end
            else begin
               dut_N_Mux_3_2_2_1_14_out1_slice = dut_N_Mux_3_2_1_1_11_out1_slice;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_2_1_14_out1_slice)
          begin :dut_N_Mux_8_8_0_4_15
            case (dut_N_Mux_3_2_2_1_14_out1_slice) 

               2'd0:                begin
                  dut_N_Mux_8_8_0_4_15_out1 = din_data_a;
               end
               
               2'd1:                begin
                  dut_N_Mux_8_8_0_4_15_out1 = din_data_b;
               end
               
               2'd2:                begin
                  dut_N_Mux_8_8_0_4_15_out1 = din_data_c;
               end
               
               2'd3:                begin
                  dut_N_Mux_8_8_0_4_15_out1 = din_data_d;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_16
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_16_out1 = din_data_e < dut_N_Mux_8_8_0_4_15_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_3_1
         always @(dut_LessThan_8Ux8U_1U_4_16_out1 or dut_N_Mux_3_2_2_1_14_out1_slice)
          begin :dut_N_Mux_3_2_3_1_17
            if (dut_LessThan_8Ux8U_1U_4_16_out1) begin
               dut_N_Mux_3_2_3_1_17_out1 = 3'd4;
            end
            else begin
               dut_N_Mux_3_2_3_1_17_out1 = {1'b0, dut_N_Mux_3_2_2_1_14_out1_slice};
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_h or din_data_g or din_data_f or din_data_e or din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_3_1_17_out1)
          begin :dut_N_Mux_8_8_0_4_18
            case (dut_N_Mux_3_2_3_1_17_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_a;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_b;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_c;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_d;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_e;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_f;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_g;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_18_out1 = din_data_h;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_19
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_19_out1 = din_data_f < dut_N_Mux_8_8_0_4_18_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_4_1
         always @(dut_N_Mux_3_2_3_1_17_out1 or dut_LessThan_8Ux8U_1U_4_19_out1)
          begin :dut_N_Mux_3_2_4_1_20
            if (dut_LessThan_8Ux8U_1U_4_19_out1) begin
               dut_N_Mux_3_2_4_1_20_out1 = 3'd5;
            end
            else begin
               dut_N_Mux_3_2_4_1_20_out1 = dut_N_Mux_3_2_3_1_17_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_h or din_data_g or din_data_f or din_data_e or din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_4_1_20_out1)
          begin :dut_N_Mux_8_8_0_4_21
            case (dut_N_Mux_3_2_4_1_20_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_a;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_b;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_c;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_d;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_e;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_f;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_g;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_21_out1 = din_data_h;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_22
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_22_out1 = din_data_g < dut_N_Mux_8_8_0_4_21_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_N_Mux_3_2_4_1_20_out1 or dut_LessThan_8Ux8U_1U_4_22_out1)
          begin :dut_N_Mux_3_2_5_1_23
            if (dut_LessThan_8Ux8U_1U_4_22_out1) begin
               dut_N_Mux_3_2_5_1_23_out1 = 3'd6;
            end
            else begin
               dut_N_Mux_3_2_5_1_23_out1 = dut_N_Mux_3_2_4_1_20_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_h or din_data_g or din_data_f or din_data_e or din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_5_1_23_out1)
          begin :dut_N_Mux_8_8_0_4_24
            case (dut_N_Mux_3_2_5_1_23_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_a;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_b;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_c;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_d;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_e;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_f;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_g;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_24_out1 = din_data_h;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_25
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_25_out1 = din_data_h < dut_N_Mux_8_8_0_4_24_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_N_Mux_3_2_5_1_23_out1 or dut_LessThan_8Ux8U_1U_4_25_out1)
          begin :dut_N_Mux_3_2_6_4_26
            if (dut_LessThan_8Ux8U_1U_4_25_out1) begin
               dut_N_Mux_3_2_6_4_26_out1 = 3'd7;
            end
            else begin
               dut_N_Mux_3_2_6_4_26_out1 = dut_N_Mux_3_2_5_1_23_out1;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_1_27
         // Resource=dut_Equal_3Ux2U_1U_1, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux2U_1U_1_27_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd2;

         // rtl_instance:dut/dut_Equal_3Ux1U_1U_1_28
         // Resource=dut_Equal_3Ux1U_1U_1, Function=eq : Inputs=3,1 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux1U_1U_1_28_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd1;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_29
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_29_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd7;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_30
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_30_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd6;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_31
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_31_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd5;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_32
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_32_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd4;

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_4_33
         // Resource=dut_Equal_3Ux2U_1U_4, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux2U_1U_4_33_out1 = dut_N_Mux_3_2_6_4_26_out1 == 3'd3;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_c or din_data_a or dut_Equal_3Ux2U_1U_1_27_out1)
          begin :dut_N_Mux_8_2_7_4_34
            if (dut_Equal_3Ux2U_1U_1_27_out1) begin
               dut_N_Mux_8_2_7_4_34_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_34_out1 = din_data_c;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_b or din_data_a or dut_Equal_3Ux1U_1U_1_28_out1)
          begin :dut_N_Mux_8_2_7_4_35
            if (dut_Equal_3Ux1U_1U_1_28_out1) begin
               dut_N_Mux_8_2_7_4_35_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_35_out1 = din_data_b;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_h or din_data_a or dut_Equal_3Ux3U_1U_4_29_out1)
          begin :dut_N_Mux_8_2_7_4_36
            if (dut_Equal_3Ux3U_1U_4_29_out1) begin
               dut_N_Mux_8_2_7_4_36_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_36_out1 = din_data_h;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_g or din_data_a or dut_Equal_3Ux3U_1U_4_30_out1)
          begin :dut_N_Mux_8_2_7_4_37
            if (dut_Equal_3Ux3U_1U_4_30_out1) begin
               dut_N_Mux_8_2_7_4_37_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_37_out1 = din_data_g;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_f or din_data_a or dut_Equal_3Ux3U_1U_4_31_out1)
          begin :dut_N_Mux_8_2_7_4_38
            if (dut_Equal_3Ux3U_1U_4_31_out1) begin
               dut_N_Mux_8_2_7_4_38_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_38_out1 = din_data_f;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_e or din_data_a or dut_Equal_3Ux3U_1U_4_32_out1)
          begin :dut_N_Mux_8_2_7_4_39
            if (dut_Equal_3Ux3U_1U_4_32_out1) begin
               dut_N_Mux_8_2_7_4_39_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_39_out1 = din_data_e;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_d or din_data_a or dut_Equal_3Ux2U_1U_4_33_out1)
          begin :dut_N_Mux_8_2_7_4_40
            if (dut_Equal_3Ux2U_1U_4_33_out1) begin
               dut_N_Mux_8_2_7_4_40_out1 = din_data_a;
            end
            else begin
               dut_N_Mux_8_2_7_4_40_out1 = din_data_d;
            end
         end

         // rtl_instance:dut/dut_GreaterThanEQ_8Ux8U_1U_4_41
         // Resource=dut_GreaterThanEQ_8Ux8U_1U_4, Function=ge : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_GreaterThanEQ_8Ux8U_1U_4_41_out1 = dut_N_Mux_8_2_7_4_34_out1 >= dut_N_Mux_8_2_7_4_35_out1;

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_42
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_42_out1 = dut_N_Mux_8_2_7_4_34_out1 < dut_N_Mux_8_2_7_4_35_out1;

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_43
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_43_out1 = (|dut_N_Mux_3_2_6_4_26_out1);

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(din_data_h or din_data_g or din_data_f or din_data_e or din_data_d or din_data_c or din_data_b or din_data_a or dut_N_Mux_3_2_6_4_26_out1)
          begin :dut_N_Mux_8_8_0_4_44
            case (dut_N_Mux_3_2_6_4_26_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_a;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_b;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_c;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_d;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_e;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_f;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_g;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_44_out1 = din_data_h;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(din_data_a or dut_OrReduction_3U_1U_4_43_out1 or dut_N_Mux_8_8_0_4_44_out1)
          begin :dut_N_Mux_8_2_7_4_45
            if (dut_OrReduction_3U_1U_4_43_out1) begin
               dut_N_Mux_8_2_7_4_45_out1 = dut_N_Mux_8_8_0_4_44_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_45_out1 = din_data_a;
            end
         end

         // rtl_process:dut/drive_dut_N_Mux_8_8_0_4_46_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_0_4_46_ctrl1
         // at: dut.cc:65:21
         assign dut_N_Mux_8_8_0_4_46_ctrl1 = {{1'b0, dut_LessThan_8Ux8U_1U_4_42_out1}, dut_GreaterThanEQ_8Ux8U_1U_4_41_out1};

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_8_8_0_4_46_ctrl1)
          begin :dut_N_Mux_8_8_0_4_46
            case (dut_N_Mux_8_8_0_4_46_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_46_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_47
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_47_out1 = dut_N_Mux_8_2_7_4_40_out1 < dut_N_Mux_8_8_0_4_46_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_2_1_48_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_2_1_48_in2
         // at: dut.cc:65:5
         assign dut_N_Mux_3_2_2_1_48_in2 = {{1'b0, dut_LessThan_8Ux8U_1U_4_42_out1}, dut_GreaterThanEQ_8Ux8U_1U_4_41_out1};

         // rtl_instance:dut/dut_N_Mux_3_2_2_1
         always @(dut_LessThan_8Ux8U_1U_4_47_out1 or dut_N_Mux_3_2_2_1_48_in2)
          begin :dut_N_Mux_3_2_2_1_48
            if (dut_LessThan_8Ux8U_1U_4_47_out1) begin
               dut_N_Mux_3_2_2_1_48_out1 = 3'd3;
            end
            else begin
               dut_N_Mux_3_2_2_1_48_out1 = dut_N_Mux_3_2_2_1_48_in2;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_3_2_2_1_48_out1)
          begin :dut_N_Mux_8_8_0_4_49
            case (dut_N_Mux_3_2_2_1_48_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_49_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_50
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_50_out1 = dut_N_Mux_8_2_7_4_39_out1 < dut_N_Mux_8_8_0_4_49_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_3_1
         always @(dut_N_Mux_3_2_2_1_48_out1 or dut_LessThan_8Ux8U_1U_4_50_out1)
          begin :dut_N_Mux_3_2_3_1_51
            if (dut_LessThan_8Ux8U_1U_4_50_out1) begin
               dut_N_Mux_3_2_3_1_51_out1 = 3'd4;
            end
            else begin
               dut_N_Mux_3_2_3_1_51_out1 = dut_N_Mux_3_2_2_1_48_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_3_2_3_1_51_out1)
          begin :dut_N_Mux_8_8_0_4_52
            case (dut_N_Mux_3_2_3_1_51_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_52_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_53
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_53_out1 = dut_N_Mux_8_2_7_4_38_out1 < dut_N_Mux_8_8_0_4_52_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_4_1
         always @(dut_N_Mux_3_2_3_1_51_out1 or dut_LessThan_8Ux8U_1U_4_53_out1)
          begin :dut_N_Mux_3_2_4_1_54
            if (dut_LessThan_8Ux8U_1U_4_53_out1) begin
               dut_N_Mux_3_2_4_1_54_out1 = 3'd5;
            end
            else begin
               dut_N_Mux_3_2_4_1_54_out1 = dut_N_Mux_3_2_3_1_51_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_3_2_4_1_54_out1)
          begin :dut_N_Mux_8_8_0_4_55
            case (dut_N_Mux_3_2_4_1_54_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_55_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_56
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_56_out1 = dut_N_Mux_8_2_7_4_37_out1 < dut_N_Mux_8_8_0_4_55_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_N_Mux_3_2_4_1_54_out1 or dut_LessThan_8Ux8U_1U_4_56_out1)
          begin :dut_N_Mux_3_2_5_1_57
            if (dut_LessThan_8Ux8U_1U_4_56_out1) begin
               dut_N_Mux_3_2_5_1_57_out1 = 3'd6;
            end
            else begin
               dut_N_Mux_3_2_5_1_57_out1 = dut_N_Mux_3_2_4_1_54_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_3_2_5_1_57_out1)
          begin :dut_N_Mux_8_8_0_4_58
            case (dut_N_Mux_3_2_5_1_57_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_58_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_59
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_59_out1 = dut_N_Mux_8_2_7_4_36_out1 < dut_N_Mux_8_8_0_4_58_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_N_Mux_3_2_5_1_57_out1 or dut_LessThan_8Ux8U_1U_4_59_out1)
          begin :dut_N_Mux_3_2_6_4_60
            if (dut_LessThan_8Ux8U_1U_4_59_out1) begin
               dut_N_Mux_3_2_6_4_60_out1 = 3'd7;
            end
            else begin
               dut_N_Mux_3_2_6_4_60_out1 = dut_N_Mux_3_2_5_1_57_out1;
            end
         end

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_61
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_61_out1 = (|dut_N_Mux_3_2_6_4_60_out1);

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_1_62
         // Resource=dut_Equal_3Ux2U_1U_1, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux2U_1U_1_62_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd3;

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_1_63
         // Resource=dut_Equal_3Ux2U_1U_1, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux2U_1U_1_63_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd2;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_64
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_64_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd7;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_65
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_65_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd6;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_66
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_66_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd5;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_67
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_67_out1 = dut_N_Mux_3_2_6_4_60_out1 == 3'd4;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_Equal_3Ux2U_1U_1_62_out1)
          begin :dut_N_Mux_8_2_7_4_68
            if (dut_Equal_3Ux2U_1U_1_62_out1) begin
               dut_N_Mux_8_2_7_4_68_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_68_out1 = dut_N_Mux_8_2_7_4_40_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_Equal_3Ux2U_1U_1_63_out1)
          begin :dut_N_Mux_8_2_7_4_69
            if (dut_Equal_3Ux2U_1U_1_63_out1) begin
               dut_N_Mux_8_2_7_4_69_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_69_out1 = dut_N_Mux_8_2_7_4_34_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_Equal_3Ux3U_1U_4_64_out1)
          begin :dut_N_Mux_8_2_7_4_70
            if (dut_Equal_3Ux3U_1U_4_64_out1) begin
               dut_N_Mux_8_2_7_4_70_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_70_out1 = dut_N_Mux_8_2_7_4_36_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_Equal_3Ux3U_1U_4_65_out1)
          begin :dut_N_Mux_8_2_7_4_71
            if (dut_Equal_3Ux3U_1U_4_65_out1) begin
               dut_N_Mux_8_2_7_4_71_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_71_out1 = dut_N_Mux_8_2_7_4_37_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_Equal_3Ux3U_1U_4_66_out1)
          begin :dut_N_Mux_8_2_7_4_72
            if (dut_Equal_3Ux3U_1U_4_66_out1) begin
               dut_N_Mux_8_2_7_4_72_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_72_out1 = dut_N_Mux_8_2_7_4_38_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_Equal_3Ux3U_1U_4_67_out1)
          begin :dut_N_Mux_8_2_7_4_73
            if (dut_Equal_3Ux3U_1U_4_67_out1) begin
               dut_N_Mux_8_2_7_4_73_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_73_out1 = dut_N_Mux_8_2_7_4_39_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_34_out1 or dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_36_out1 or dut_N_Mux_8_2_7_4_37_out1 or dut_N_Mux_8_2_7_4_38_out1 or dut_N_Mux_8_2_7_4_39_out1 or dut_N_Mux_8_2_7_4_40_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_N_Mux_3_2_6_4_60_out1)
          begin :dut_N_Mux_8_8_0_4_74
            case (dut_N_Mux_3_2_6_4_60_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_45_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_35_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_34_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_40_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_39_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_38_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_37_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_74_out1 = dut_N_Mux_8_2_7_4_36_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_35_out1 or dut_N_Mux_8_2_7_4_45_out1 or dut_OrReduction_3U_1U_4_61_out1)
          begin :dut_N_Mux_8_2_7_4_75
            if (dut_OrReduction_3U_1U_4_61_out1) begin
               dut_N_Mux_8_2_7_4_75_out1 = dut_N_Mux_8_2_7_4_45_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_75_out1 = dut_N_Mux_8_2_7_4_35_out1;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_76
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_76_out1 = dut_N_Mux_8_2_7_4_68_out1 < dut_N_Mux_8_2_7_4_69_out1;

         // rtl_process:dut/drive_dut_N_Mux_8_8_0_4_77_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_0_4_77_ctrl1
         // at: dut.cc:65:21
         assign dut_N_Mux_8_8_0_4_77_ctrl1 = {2'd1, dut_LessThan_8Ux8U_1U_4_76_out1};

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_68_out1 or dut_N_Mux_8_2_7_4_69_out1 or dut_N_Mux_8_2_7_4_70_out1 or dut_N_Mux_8_2_7_4_71_out1 or dut_N_Mux_8_2_7_4_72_out1 or dut_N_Mux_8_2_7_4_73_out1 or dut_N_Mux_8_8_0_4_74_out1 or dut_N_Mux_8_2_7_4_75_out1 or dut_N_Mux_8_8_0_4_77_ctrl1)
          begin :dut_N_Mux_8_8_0_4_77
            case (dut_N_Mux_8_8_0_4_77_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_75_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_8_0_4_74_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_69_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_68_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_73_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_72_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_71_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_77_out1 = dut_N_Mux_8_2_7_4_70_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_78
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_78_out1 = s_reg_16 < s_reg_20;

         // rtl_instance:dut/dut_N_Mux_3_2_3_4
         always @(dut_LessThan_8Ux8U_1U_4_78_out1 or s_reg_19_slice)
          begin :dut_N_Mux_3_2_3_4_79
            if (dut_LessThan_8Ux8U_1U_4_78_out1) begin
               dut_N_Mux_3_2_3_4_79_out1 = 3'd4;
            end
            else begin
               dut_N_Mux_3_2_3_4_79_out1 = {2'd1, s_reg_19_slice};
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(s_reg_11 or s_reg_12 or s_reg_13 or s_reg_14 or s_reg_15 or s_reg_16 or s_reg_17 or s_reg_18 or dut_N_Mux_3_2_3_4_79_out1)
          begin :dut_N_Mux_8_8_0_4_80
            case (dut_N_Mux_3_2_3_4_79_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_18;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_17;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_12;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_11;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_16;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_15;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_14;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_80_out1 = s_reg_13;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_81
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_81_out1 = s_reg_15 < dut_N_Mux_8_8_0_4_80_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_4_4
         always @(dut_N_Mux_3_2_3_4_79_out1 or dut_LessThan_8Ux8U_1U_4_81_out1)
          begin :dut_N_Mux_3_2_4_4_82
            if (dut_LessThan_8Ux8U_1U_4_81_out1) begin
               dut_N_Mux_3_2_4_4_82_out1 = 3'd5;
            end
            else begin
               dut_N_Mux_3_2_4_4_82_out1 = dut_N_Mux_3_2_3_4_79_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(s_reg_11 or s_reg_12 or s_reg_13 or s_reg_14 or s_reg_15 or s_reg_16 or s_reg_17 or s_reg_18 or dut_N_Mux_3_2_4_4_82_out1)
          begin :dut_N_Mux_8_8_0_4_83
            case (dut_N_Mux_3_2_4_4_82_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_18;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_17;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_12;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_11;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_16;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_15;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_14;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_83_out1 = s_reg_13;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_84
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_84_out1 = s_reg_14 < dut_N_Mux_8_8_0_4_83_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_N_Mux_3_2_4_4_82_out1 or dut_LessThan_8Ux8U_1U_4_84_out1)
          begin :dut_N_Mux_3_2_5_1_85
            if (dut_LessThan_8Ux8U_1U_4_84_out1) begin
               dut_N_Mux_3_2_5_1_85_out1 = 3'd6;
            end
            else begin
               dut_N_Mux_3_2_5_1_85_out1 = dut_N_Mux_3_2_4_4_82_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(s_reg_11 or s_reg_12 or s_reg_13 or s_reg_14 or s_reg_15 or s_reg_16 or s_reg_17 or s_reg_18 or dut_N_Mux_3_2_5_1_85_out1)
          begin :dut_N_Mux_8_8_0_4_86
            case (dut_N_Mux_3_2_5_1_85_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_18;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_17;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_12;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_11;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_16;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_15;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_14;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_86_out1 = s_reg_13;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_87
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_87_out1 = s_reg_13 < dut_N_Mux_8_8_0_4_86_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_N_Mux_3_2_5_1_85_out1 or dut_LessThan_8Ux8U_1U_4_87_out1)
          begin :dut_N_Mux_3_2_6_4_88
            if (dut_LessThan_8Ux8U_1U_4_87_out1) begin
               dut_N_Mux_3_2_6_4_88_out1 = 3'd7;
            end
            else begin
               dut_N_Mux_3_2_6_4_88_out1 = dut_N_Mux_3_2_5_1_85_out1;
            end
         end

         // rtl_instance:dut/dut_OrReduction_3U_1U_4_89
         // Resource=dut_OrReduction_3U_1U_4, Function=or : Inputs=3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_OrReduction_3U_1U_4_89_out1 = (|dut_N_Mux_3_2_6_4_88_out1);

         // rtl_instance:dut/dut_Equal_3Ux1U_1U_4_90
         // Resource=dut_Equal_3Ux1U_1U_4, Function=eq : Inputs=3,1 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux1U_1U_4_90_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd1;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_91
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_91_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd4;

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_4_92
         // Resource=dut_Equal_3Ux2U_1U_4, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux2U_1U_4_92_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd3;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_16 or dut_Equal_3Ux3U_1U_4_91_out1)
          begin :dut_N_Mux_8_2_7_4_93
            if (dut_Equal_3Ux3U_1U_4_91_out1) begin
               dut_N_Mux_8_2_7_4_93_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_93_out1 = s_reg_16;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_11 or s_reg_12 or dut_Equal_3Ux2U_1U_4_92_out1)
          begin :dut_N_Mux_8_2_7_4_94
            if (dut_Equal_3Ux2U_1U_4_92_out1) begin
               dut_N_Mux_8_2_7_4_94_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_94_out1 = s_reg_11;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_95
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_95_out1 = dut_N_Mux_8_2_7_4_93_out1 < dut_N_Mux_8_2_7_4_94_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_3_4
         always @(dut_LessThan_8Ux8U_1U_4_95_out1)
          begin :dut_N_Mux_3_2_3_4_96
            if (dut_LessThan_8Ux8U_1U_4_95_out1) begin
               dut_N_Mux_3_2_3_4_96_out1 = 3'd4;
            end
            else begin
               dut_N_Mux_3_2_3_4_96_out1 = 3'd3;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_97
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_97_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd5;

         // rtl_instance:dut/dut_Equal_3Ux2U_1U_1_98
         // Resource=dut_Equal_3Ux2U_1U_1, Function=eq : Inputs=3,2 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:21
         assign dut_Equal_3Ux2U_1U_1_98_out1 = dut_N_Mux_3_2_3_4_96_out1 == 3'd3;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_15 or dut_Equal_3Ux3U_1U_4_97_out1)
          begin :dut_N_Mux_8_2_7_4_99
            if (dut_Equal_3Ux3U_1U_4_97_out1) begin
               dut_N_Mux_8_2_7_4_99_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_99_out1 = s_reg_15;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_93_out1 or dut_N_Mux_8_2_7_4_94_out1 or dut_Equal_3Ux2U_1U_1_98_out1)
          begin :dut_N_Mux_8_2_7_4_100
            if (dut_Equal_3Ux2U_1U_1_98_out1) begin
               dut_N_Mux_8_2_7_4_100_out1 = dut_N_Mux_8_2_7_4_94_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_100_out1 = dut_N_Mux_8_2_7_4_93_out1;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_101
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_101_out1 = dut_N_Mux_8_2_7_4_99_out1 < dut_N_Mux_8_2_7_4_100_out1;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_102
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_102_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd6;

         // rtl_instance:dut/dut_N_Mux_3_2_4_1
         always @(dut_N_Mux_3_2_3_4_96_out1 or dut_LessThan_8Ux8U_1U_4_101_out1)
          begin :dut_N_Mux_3_2_4_1_103
            if (dut_LessThan_8Ux8U_1U_4_101_out1) begin
               dut_N_Mux_3_2_4_1_103_out1 = 3'd5;
            end
            else begin
               dut_N_Mux_3_2_4_1_103_out1 = dut_N_Mux_3_2_3_4_96_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_14 or dut_Equal_3Ux3U_1U_4_102_out1)
          begin :dut_N_Mux_8_2_7_4_104
            if (dut_Equal_3Ux3U_1U_4_102_out1) begin
               dut_N_Mux_8_2_7_4_104_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_104_out1 = s_reg_14;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_3_8_1
         always @(dut_N_Mux_8_2_7_4_93_out1 or dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_99_out1 or dut_N_Mux_3_2_4_1_103_out1)
          begin :dut_N_Mux_8_3_8_1_105
            case (dut_N_Mux_3_2_4_1_103_out1) 

               3'd3:                begin
                  dut_N_Mux_8_3_8_1_105_out1 = dut_N_Mux_8_2_7_4_94_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_3_8_1_105_out1 = dut_N_Mux_8_2_7_4_93_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_3_8_1_105_out1 = dut_N_Mux_8_2_7_4_99_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_106
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_106_out1 = dut_N_Mux_8_2_7_4_104_out1 < dut_N_Mux_8_3_8_1_105_out1;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_107
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_107_out1 = dut_N_Mux_3_2_6_4_88_out1 == 3'd7;

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_N_Mux_3_2_4_1_103_out1 or dut_LessThan_8Ux8U_1U_4_106_out1)
          begin :dut_N_Mux_3_2_5_1_108
            if (dut_LessThan_8Ux8U_1U_4_106_out1) begin
               dut_N_Mux_3_2_5_1_108_out1 = 3'd6;
            end
            else begin
               dut_N_Mux_3_2_5_1_108_out1 = dut_N_Mux_3_2_4_1_103_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_13 or dut_Equal_3Ux3U_1U_4_107_out1)
          begin :dut_N_Mux_8_2_7_4_109
            if (dut_Equal_3Ux3U_1U_4_107_out1) begin
               dut_N_Mux_8_2_7_4_109_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_109_out1 = s_reg_13;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_4_9_4
         always @(dut_N_Mux_8_2_7_4_93_out1 or dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_99_out1 or dut_N_Mux_8_2_7_4_104_out1 or dut_N_Mux_3_2_5_1_108_out1)
          begin :dut_N_Mux_8_4_9_4_110
            case (dut_N_Mux_3_2_5_1_108_out1) 

               3'd3:                begin
                  dut_N_Mux_8_4_9_4_110_out1 = dut_N_Mux_8_2_7_4_94_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_4_9_4_110_out1 = dut_N_Mux_8_2_7_4_93_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_4_9_4_110_out1 = dut_N_Mux_8_2_7_4_99_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_4_9_4_110_out1 = dut_N_Mux_8_2_7_4_104_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_111
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_111_out1 = dut_N_Mux_8_2_7_4_109_out1 < dut_N_Mux_8_4_9_4_110_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_N_Mux_3_2_5_1_108_out1 or dut_LessThan_8Ux8U_1U_4_111_out1)
          begin :dut_N_Mux_3_2_6_4_112
            if (dut_LessThan_8Ux8U_1U_4_111_out1) begin
               dut_N_Mux_3_2_6_4_112_out1 = 3'd7;
            end
            else begin
               dut_N_Mux_3_2_6_4_112_out1 = dut_N_Mux_3_2_5_1_108_out1;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_113
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_113_out1 = dut_N_Mux_3_2_6_4_112_out1 == 3'd5;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_114
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_114_out1 = dut_N_Mux_3_2_6_4_112_out1 == 3'd4;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_115
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_115_out1 = dut_N_Mux_3_2_6_4_112_out1 == 3'd7;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_116
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_116_out1 = dut_N_Mux_3_2_6_4_112_out1 == 3'd6;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_99_out1 or dut_Equal_3Ux3U_1U_4_113_out1)
          begin :dut_N_Mux_8_2_7_4_117
            if (dut_Equal_3Ux3U_1U_4_113_out1) begin
               dut_N_Mux_8_2_7_4_117_out1 = dut_N_Mux_8_2_7_4_94_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_117_out1 = dut_N_Mux_8_2_7_4_99_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_93_out1 or dut_N_Mux_8_2_7_4_94_out1 or dut_Equal_3Ux3U_1U_4_114_out1)
          begin :dut_N_Mux_8_2_7_4_118
            if (dut_Equal_3Ux3U_1U_4_114_out1) begin
               dut_N_Mux_8_2_7_4_118_out1 = dut_N_Mux_8_2_7_4_94_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_118_out1 = dut_N_Mux_8_2_7_4_93_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_109_out1 or dut_Equal_3Ux3U_1U_4_115_out1)
          begin :dut_N_Mux_8_2_7_4_119
            if (dut_Equal_3Ux3U_1U_4_115_out1) begin
               dut_N_Mux_8_2_7_4_119_out1 = dut_N_Mux_8_2_7_4_94_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_119_out1 = dut_N_Mux_8_2_7_4_109_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_104_out1 or dut_Equal_3Ux3U_1U_4_116_out1)
          begin :dut_N_Mux_8_2_7_4_120
            if (dut_Equal_3Ux3U_1U_4_116_out1) begin
               dut_N_Mux_8_2_7_4_120_out1 = dut_N_Mux_8_2_7_4_94_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_120_out1 = dut_N_Mux_8_2_7_4_104_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_5_10_4
         always @(dut_N_Mux_8_2_7_4_93_out1 or dut_N_Mux_8_2_7_4_94_out1 or dut_N_Mux_8_2_7_4_99_out1 or dut_N_Mux_8_2_7_4_104_out1 or dut_N_Mux_8_2_7_4_109_out1 or dut_N_Mux_3_2_6_4_112_out1)
          begin :dut_N_Mux_8_5_10_4_121
            case (dut_N_Mux_3_2_6_4_112_out1) 

               3'd3:                begin
                  dut_N_Mux_8_5_10_4_121_out1 = dut_N_Mux_8_2_7_4_94_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_5_10_4_121_out1 = dut_N_Mux_8_2_7_4_93_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_5_10_4_121_out1 = dut_N_Mux_8_2_7_4_99_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_5_10_4_121_out1 = dut_N_Mux_8_2_7_4_104_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_5_10_4_121_out1 = dut_N_Mux_8_2_7_4_109_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(s_reg_11 or s_reg_12 or s_reg_13 or s_reg_14 or s_reg_15 or s_reg_16 or s_reg_17 or s_reg_18 or dut_N_Mux_3_2_6_4_88_out1)
          begin :dut_N_Mux_8_8_0_4_122
            case (dut_N_Mux_3_2_6_4_88_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_18;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_17;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_12;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_11;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_16;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_15;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_14;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_122_out1 = s_reg_13;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_17 or dut_Equal_3Ux1U_1U_4_90_out1)
          begin :dut_N_Mux_8_2_7_4_123
            if (dut_Equal_3Ux1U_1U_4_90_out1) begin
               dut_N_Mux_8_2_7_4_123_out1 = s_reg_12;
            end
            else begin
               dut_N_Mux_8_2_7_4_123_out1 = s_reg_17;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(s_reg_12 or s_reg_18 or dut_OrReduction_3U_1U_4_89_out1)
          begin :dut_N_Mux_8_2_7_4_124
            if (dut_OrReduction_3U_1U_4_89_out1) begin
               dut_N_Mux_8_2_7_4_124_out1 = s_reg_18;
            end
            else begin
               dut_N_Mux_8_2_7_4_124_out1 = s_reg_12;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_125
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_125_out1 = dut_N_Mux_8_2_7_4_117_out1 < dut_N_Mux_8_2_7_4_118_out1;

         // rtl_process:dut/drive_dut_N_Mux_8_8_0_4_126_ctrl1
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_8_8_0_4_126_ctrl1
         // at: dut.cc:65:21
         assign dut_N_Mux_8_8_0_4_126_ctrl1 = {2'd2, dut_LessThan_8Ux8U_1U_4_125_out1};

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_117_out1 or dut_N_Mux_8_2_7_4_118_out1 or dut_N_Mux_8_2_7_4_119_out1 or dut_N_Mux_8_2_7_4_120_out1 or dut_N_Mux_8_5_10_4_121_out1 or dut_N_Mux_8_8_0_4_122_out1 or dut_N_Mux_8_2_7_4_123_out1 or dut_N_Mux_8_2_7_4_124_out1 or dut_N_Mux_8_8_0_4_126_ctrl1)
          begin :dut_N_Mux_8_8_0_4_126
            case (dut_N_Mux_8_8_0_4_126_ctrl1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_124_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_123_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_8_0_4_122_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_5_10_4_121_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_118_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_117_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_120_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_126_out1 = dut_N_Mux_8_2_7_4_119_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_127
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_127_out1 = dut_N_Mux_8_2_7_4_120_out1 < dut_N_Mux_8_8_0_4_126_out1;

         // rtl_process:dut/drive_dut_N_Mux_3_2_5_1_128_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_N_Mux_3_2_5_1_128_in2
         // at: dut.cc:65:5
         assign dut_N_Mux_3_2_5_1_128_in2 = {2'd2, dut_LessThan_8Ux8U_1U_4_125_out1};

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_LessThan_8Ux8U_1U_4_127_out1 or dut_N_Mux_3_2_5_1_128_in2)
          begin :dut_N_Mux_3_2_5_1_128
            if (dut_LessThan_8Ux8U_1U_4_127_out1) begin
               dut_N_Mux_3_2_5_1_128_out1 = 3'd6;
            end
            else begin
               dut_N_Mux_3_2_5_1_128_out1 = dut_N_Mux_3_2_5_1_128_in2;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_117_out1 or dut_N_Mux_8_2_7_4_118_out1 or dut_N_Mux_8_2_7_4_119_out1 or dut_N_Mux_8_2_7_4_120_out1 or dut_N_Mux_8_5_10_4_121_out1 or dut_N_Mux_8_8_0_4_122_out1 or dut_N_Mux_8_2_7_4_123_out1 or dut_N_Mux_8_2_7_4_124_out1 or dut_N_Mux_3_2_5_1_128_out1)
          begin :dut_N_Mux_8_8_0_4_129
            case (dut_N_Mux_3_2_5_1_128_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_124_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_123_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_8_0_4_122_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_5_10_4_121_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_118_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_117_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_120_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_129_out1 = dut_N_Mux_8_2_7_4_119_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_130
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_130_out1 = dut_N_Mux_8_2_7_4_119_out1 < dut_N_Mux_8_8_0_4_129_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_N_Mux_3_2_5_1_128_out1 or dut_LessThan_8Ux8U_1U_4_130_out1)
          begin :dut_N_Mux_3_2_6_4_131
            if (dut_LessThan_8Ux8U_1U_4_130_out1) begin
               dut_N_Mux_3_2_6_4_131_out1 = 3'd7;
            end
            else begin
               dut_N_Mux_3_2_6_4_131_out1 = dut_N_Mux_3_2_5_1_128_out1;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_132
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_132_out1 = dut_N_Mux_3_2_6_4_131_out1 == 3'd6;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_133
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_133_out1 = dut_N_Mux_3_2_6_4_131_out1 == 3'd5;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_118_out1 or dut_N_Mux_8_2_7_4_120_out1 or dut_Equal_3Ux3U_1U_4_132_out1)
          begin :dut_N_Mux_8_2_7_4_134
            if (dut_Equal_3Ux3U_1U_4_132_out1) begin
               dut_N_Mux_8_2_7_4_134_out1 = dut_N_Mux_8_2_7_4_118_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_134_out1 = dut_N_Mux_8_2_7_4_120_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_117_out1 or dut_N_Mux_8_2_7_4_118_out1 or dut_Equal_3Ux3U_1U_4_133_out1)
          begin :dut_N_Mux_8_2_7_4_135
            if (dut_Equal_3Ux3U_1U_4_133_out1) begin
               dut_N_Mux_8_2_7_4_135_out1 = dut_N_Mux_8_2_7_4_118_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_135_out1 = dut_N_Mux_8_2_7_4_117_out1;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_136
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_136_out1 = dut_N_Mux_8_2_7_4_134_out1 < dut_N_Mux_8_2_7_4_135_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_5_1
         always @(dut_LessThan_8Ux8U_1U_4_136_out1)
          begin :dut_N_Mux_3_2_5_1_137
            if (dut_LessThan_8Ux8U_1U_4_136_out1) begin
               dut_N_Mux_3_2_5_1_137_out1_slice = 2'd2;
            end
            else begin
               dut_N_Mux_3_2_5_1_137_out1_slice = 2'd1;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_138
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_138_out1 = dut_N_Mux_3_2_6_4_131_out1 == 3'd7;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_139
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:21
         assign dut_Equal_3Ux3U_1U_4_139_out1 = {1'b1, dut_N_Mux_3_2_5_1_137_out1_slice} == 3'd5;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_118_out1 or dut_N_Mux_8_2_7_4_119_out1 or dut_Equal_3Ux3U_1U_4_138_out1)
          begin :dut_N_Mux_8_2_7_4_140
            if (dut_Equal_3Ux3U_1U_4_138_out1) begin
               dut_N_Mux_8_2_7_4_140_out1 = dut_N_Mux_8_2_7_4_118_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_140_out1 = dut_N_Mux_8_2_7_4_119_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_134_out1 or dut_N_Mux_8_2_7_4_135_out1 or dut_Equal_3Ux3U_1U_4_139_out1)
          begin :dut_N_Mux_8_2_7_4_141
            if (dut_Equal_3Ux3U_1U_4_139_out1) begin
               dut_N_Mux_8_2_7_4_141_out1 = dut_N_Mux_8_2_7_4_135_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_141_out1 = dut_N_Mux_8_2_7_4_134_out1;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_142
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_142_out1 = dut_N_Mux_8_2_7_4_140_out1 < dut_N_Mux_8_2_7_4_141_out1;

         // rtl_instance:dut/dut_N_Mux_3_2_6_4
         always @(dut_LessThan_8Ux8U_1U_4_142_out1 or dut_N_Mux_3_2_5_1_137_out1_slice)
          begin :dut_N_Mux_3_2_6_4_143
            if (dut_LessThan_8Ux8U_1U_4_142_out1) begin
               dut_N_Mux_3_2_6_4_143_out1_slice = 2'd3;
            end
            else begin
               dut_N_Mux_3_2_6_4_143_out1_slice = dut_N_Mux_3_2_5_1_137_out1_slice;
            end
         end

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_144
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_144_out1 = {1'b1, dut_N_Mux_3_2_6_4_143_out1_slice} == 3'd7;

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_145
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_145_out1 = {1'b1, dut_N_Mux_3_2_6_4_143_out1_slice} == 3'd6;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_135_out1 or dut_N_Mux_8_2_7_4_140_out1 or dut_Equal_3Ux3U_1U_4_144_out1)
          begin :dut_N_Mux_8_2_7_4_146
            if (dut_Equal_3Ux3U_1U_4_144_out1) begin
               dut_N_Mux_8_2_7_4_146_out1 = dut_N_Mux_8_2_7_4_135_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_146_out1 = dut_N_Mux_8_2_7_4_140_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_134_out1 or dut_N_Mux_8_2_7_4_135_out1 or dut_Equal_3Ux3U_1U_4_145_out1)
          begin :dut_N_Mux_8_2_7_4_147
            if (dut_Equal_3Ux3U_1U_4_145_out1) begin
               dut_N_Mux_8_2_7_4_147_out1 = dut_N_Mux_8_2_7_4_135_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_147_out1 = dut_N_Mux_8_2_7_4_134_out1;
            end
         end

         // rtl_instance:dut/dut_LessThan_8Ux8U_1U_4_148
         // Resource=dut_LessThan_8Ux8U_1U_4, Function=lt : Inputs=8,8 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:65:16
         assign dut_LessThan_8Ux8U_1U_4_148_out1 = dut_N_Mux_8_2_7_4_146_out1 < dut_N_Mux_8_2_7_4_147_out1;

         // rtl_instance:dut/dut_N_Mux_8_3_11_4
         always @(dut_N_Mux_8_2_7_4_134_out1 or dut_N_Mux_8_2_7_4_135_out1 or dut_N_Mux_8_2_7_4_140_out1 or dut_N_Mux_3_2_6_4_143_out1_slice)
          begin :dut_N_Mux_8_3_11_4_149
            case (dut_N_Mux_3_2_6_4_143_out1_slice) 

               2'd1:                begin
                  dut_N_Mux_8_3_11_4_149_out1 = dut_N_Mux_8_2_7_4_135_out1;
               end
               
               2'd2:                begin
                  dut_N_Mux_8_3_11_4_149_out1 = dut_N_Mux_8_2_7_4_134_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_3_11_4_149_out1 = dut_N_Mux_8_2_7_4_140_out1;
               end
               
            endcase

         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_2_7_4_117_out1 or dut_N_Mux_8_2_7_4_118_out1 or dut_N_Mux_8_2_7_4_119_out1 or dut_N_Mux_8_2_7_4_120_out1 or dut_N_Mux_8_5_10_4_121_out1 or dut_N_Mux_8_8_0_4_122_out1 or dut_N_Mux_8_2_7_4_123_out1 or dut_N_Mux_8_2_7_4_124_out1 or dut_N_Mux_3_2_6_4_131_out1)
          begin :dut_N_Mux_8_8_0_4_150
            case (dut_N_Mux_3_2_6_4_131_out1) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_124_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_123_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_8_0_4_122_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_5_10_4_121_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_118_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_117_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_120_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_150_out1 = dut_N_Mux_8_2_7_4_119_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_dut_Equal_3Ux3U_1U_4_151_in2
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dut_Equal_3Ux3U_1U_4_151_in2
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_151_in2 = {2'd3, dut_LessThan_8Ux8U_1U_4_148_out1};

         // rtl_instance:dut/dut_Equal_3Ux3U_1U_4_151
         // Resource=dut_Equal_3Ux3U_1U_4, Function=eq : Inputs=3,3 Outputs=1
         // Implements 1 operation(s)
         // at: dut.cc:72:7
         assign dut_Equal_3Ux3U_1U_4_151_out1 = dut_Equal_3Ux3U_1U_4_151_in2 == 3'd7;

         // rtl_instance:dut/dut_N_Mux_8_2_7_4
         always @(dut_N_Mux_8_2_7_4_146_out1 or dut_N_Mux_8_2_7_4_147_out1 or dut_Equal_3Ux3U_1U_4_151_out1)
          begin :dut_N_Mux_8_2_7_4_152
            if (dut_Equal_3Ux3U_1U_4_151_out1) begin
               dut_N_Mux_8_2_7_4_152_out1 = dut_N_Mux_8_2_7_4_147_out1;
            end
            else begin
               dut_N_Mux_8_2_7_4_152_out1 = dut_N_Mux_8_2_7_4_146_out1;
            end
         end

         // rtl_instance:dut/dut_N_Mux_8_8_0_4
         always @(dut_N_Mux_8_5_10_4_121_out1 or dut_N_Mux_8_8_0_4_122_out1 or dut_N_Mux_8_2_7_4_123_out1 or dut_N_Mux_8_2_7_4_124_out1 or dut_N_Mux_8_2_7_4_146_out1 or dut_N_Mux_8_2_7_4_147_out1 or dut_N_Mux_8_3_11_4_149_out1 or dut_N_Mux_8_8_0_4_150_out1 or dut_Equal_3Ux3U_1U_4_151_in2)
          begin :dut_N_Mux_8_8_0_4_153
            case (dut_Equal_3Ux3U_1U_4_151_in2) 

               3'd0:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_2_7_4_124_out1;
               end
               
               3'd1:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_2_7_4_123_out1;
               end
               
               3'd2:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_8_0_4_122_out1;
               end
               
               3'd3:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_5_10_4_121_out1;
               end
               
               3'd4:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_8_0_4_150_out1;
               end
               
               3'd5:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_3_11_4_149_out1;
               end
               
               3'd6:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_2_7_4_147_out1;
               end
               
               default:                begin
                  dut_N_Mux_8_8_0_4_153_out1 = dut_N_Mux_8_2_7_4_146_out1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_global_state
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB12 : SCHED_2
         //    FSM: global_state == 2
         // BB21 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 3
         always @(posedge clk)
          begin :drive_global_state
            if (rst == 1'b0) begin
               // basic_block:gen_do_stall_reg_full/BB8
               global_state <= 2'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // rtl_process:dut/drive_global_state_next
         // FSM Control Mux
         // FSM Control for thread behavior:thread1
         // BB3 : PROTO_1
         //   SRCLOC: dut.cc:35:3
         // Controls the following states
         //    FSM: global_state == 0
         // BB7 : PROTO_2
         //   SRCLOC: cynw_p2p.h:1466:11
         //    FSM: global_state == 1
         // BB12 : SCHED_2
         //    FSM: global_state == 2
         // BB21 : PROTO_3
         //   SRCLOC: cynw_p2p.h:5073:4
         //    FSM: global_state == 3
         always @(global_state)
          begin :drive_global_state_next
            case (global_state) 

               2'd0, 2'd3:                begin
                  // basic_block:thread1/BB7
                  global_state_next = 2'd1;
               end
               
               default:                begin
                  global_state_next = global_state + 2'd1;
               end
               
            endcase

         end

         // rtl_process:dut/drive_din_busy
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_din_busy
         // at: cynw_p2p.h:1771:13
         assign din_busy = dut_gen_busy_r_1_2_out1[2];

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // Resource=dut_gen_busy_r_1, Function=not not and and or : Inputs=1,1,1 Outputs=3
         // Implements 1 operation(s)
         // at: cynw_p2p.h:1739:8
         assign dut_gen_busy_r_1_2_out1 = {dut_gen_busy_r_1_2_gnew_req, {dut_gen_busy_r_1_2_gdiv, dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next}};

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:2307
         assign dut_gen_busy_r_1_2_gen_busy_din_m_data_is_invalid_next = ~dut_gen_busy_r_1_2_gdiv;

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:2307
         assign dut_gen_busy_r_1_2_gdiv = din_vld & !dut_gen_busy_r_1_2_gnew_req;

         // rtl_instance:dut/dut_gen_busy_r_1_2
         // This resource is split across multiple concurrent processes.
         // See line:2307
         assign dut_gen_busy_r_1_2_gnew_req = din_m_busy_req_0 & (din_m_unvalidated_req | din_vld);

         // rtl_process:dut/drive_din_m_unvalidated_req
         // Sharing or Control mux
         // Sharing/Controlling 4 operation(s) on drive_din_m_unvalidated_req
         // at: cynw_p2p.h:1802:2
         // at: cynw_p2p.h:1796:10
         // at: cynw_p2p.h:1807:13
         // at: cynw_p2p.h:1761:36
         always @(posedge clk)
          begin :drive_din_m_unvalidated_req
            if (rst == 1'b0) begin
               // op:gen_unvalidated_req/OP0
               // at: cynw_p2p.h:1802:2
               // Call Stack: 
               // in function gen_unvalidated_req called from cynw_p2p.h:1802:2
               din_m_unvalidated_req <= 1'd1;
            end
            else begin
               // op:gen_unvalidated_req/OP6
               // at: cynw_p2p.h:1807:13
               // Call Stack: 
               // in function gen_unvalidated_req called from cynw_p2p.h:1807:13
               din_m_unvalidated_req <= dut_N_Muxb_1_2_12_4_1_out1;
            end
         end

         // rtl_instance:dut/dut_N_Muxb_1_2_12_4
         // This resource is split across multiple concurrent processes.
         // See line:2307
         always @(din_vld or din_m_busy_req_0 or din_m_unvalidated_req)
          begin :dut_N_Muxb_1_2_12_4_1
            if (din_m_busy_req_0) begin
               dut_N_Muxb_1_2_12_4_1_out1 = din_m_unvalidated_req;
            end
            else begin
               dut_N_Muxb_1_2_12_4_1_out1 = din_vld;
            end
         end

         // rtl_process:dut/drive_dout_vld
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_vld
         // at: cynw_p2p.h:5144:18
         assign dout_vld = dut_Or_1Ux1U_1U_4_5_out1;

         // rtl_instance:dut/dut_Or_1Ux1U_1U_4_5
         // Resource=dut_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_p2p.h:5144:50
         assign dut_Or_1Ux1U_1U_4_5_out1 = dout_m_unacked_req | dut_Xor_1Ux1U_1U_1_4_out1;

         // rtl_process:dut/drive_dout_m_unacked_req
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_dout_m_unacked_req
         // at: cynw_p2p.h:5144:29
         // at: cynw_p2p.h:5156:9
         // at: cynw_p2p.h:5159:9
         always @(posedge clk)
          begin :drive_dout_m_unacked_req
            if (rst == 1'b0) begin
               // op:gen_unacked_req/OP55
               // at: cynw_p2p.h:5156:9
               // Call Stack: 
               // in function gen_unacked_req called from cynw_p2p.h:5156:9
               dout_m_unacked_req <= 1'd0;
            end
            else begin
               // op:gen_unacked_req/OP57
               // at: cynw_p2p.h:5159:9
               // Call Stack: 
               // in function gen_unacked_req called from cynw_p2p.h:5159:9
               dout_m_unacked_req <= dut_And_1Ux1U_1U_1_6_out1;
            end
         end

         // rtl_instance:dut/dut_And_1Ux1U_1U_1_6
         // Resource=dut_And_1Ux1U_1U_1, Function=and : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_p2p.h:5171:43
         assign dut_And_1Ux1U_1U_1_6_out1 = dout_busy & dout_vld;

         // rtl_instance:dut/dut_Xor_1Ux1U_1U_1_4
         // Resource=dut_Xor_1Ux1U_1U_1, Function=xor : Inputs=1,1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_comm_util.h:1331:70
         assign dut_Xor_1Ux1U_1U_1_4_out1 = dout_m_req_m_trig_req ^ dout_m_req_m_prev_trig_req;

         // rtl_process:dut/drive_dout_m_req_m_prev_trig_req
         // Sharing or Control mux
         // Sharing/Controlling 3 operation(s) on drive_dout_m_req_m_prev_trig_req
         // at: cynw_comm_util.h:1343:9
         // at: cynw_comm_util.h:1345:9
         // at: cynw_comm_util.h:1331:73
         always @(posedge clk)
          begin :drive_dout_m_req_m_prev_trig_req
            if (rst == 1'b0) begin
               // op:gen_prev_trig_reg/OP10
               // at: cynw_comm_util.h:1343:9
               // Call Stack: 
               // in function gen_prev_trig_reg called from cynw_comm_util.h:1343:9
               dout_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               // op:gen_prev_trig_reg/OP12
               // at: cynw_comm_util.h:1345:9
               // Call Stack: 
               // in function gen_prev_trig_reg called from cynw_comm_util.h:1345:9
               dout_m_req_m_prev_trig_req <= dout_m_req_m_trig_req;
            end
         end

         // rtl_instance:dut/dut_Not_1U_1U_1_7
         // Resource=dut_Not_1U_1U_1, Function=not : Inputs=1 Outputs=1
         // Implements 1 operation(s)
         // at: cynw_comm_util.h:1367:25
         assign dut_Not_1U_1U_1_7_out1 = !dout_m_req_m_trig_req;

         // rtl_process:dut/drive_dout_data
         // Sharing or Control mux
         // Sharing/Controlling 1 operation(s) on drive_dout_data
         // at: cynw_p2p.h:5278:13
         assign dout_data = {{24'b000000000000000000000000, dout_data_slice[63:56]}, {24'd00000000, {dout_data_slice[55:48], {24'd00000000, {dout_data_slice[47:40], {24'd00000000, {dout_data_slice[39:32], {24'd00000000, {dout_data_slice[31:24], {24'd00000000, {dout_data_slice[23:16], {24'd00000000, {dout_data_slice[15:8], {24'd00000000, dout_data_slice[7:0]}}}}}}}}}}}}}};


endmodule


